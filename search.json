[{"path":"http://wilsonfreitas.github.io/rb3/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rb3 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"historical-nominal-interest-rates","dir":"Articles","previous_headings":"","what":"Historical nominal interest rates","title":"How to Compute Historical Rates from B3 Future Prices","text":"interest rates can extracted futures prices. DI1 futures matures first day month. code generates maturities three characters maturity codes. business days implied rates calculated fixedincome::rates function, know notional amount contracts 100000. graphic can see dynamics nominal interest rates contracts DI1F23 DI1F33. contracts exactly 10 years distant .","code":"di1_futures <- df |>     filter(commodity == \"DI1\") |>     mutate(         maturity_date = maturity2date(maturity_code),         fixing = following(maturity_date, \"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\"),         adjusted_tax = rates(\"discrete\", business_days / 252, 100000 / price)     ) |>     filter(business_days > 0)  di1_futures |>     filter(symbol %in% c(\"DI1F23\", \"DI1F33\")) |>     ggplot(aes(x = refdate, y = adjusted_tax, color = symbol, group = symbol)) +     geom_line() +     geom_point() +     labs(         title = \"DI1 Future Rates - Nominal Interest Rates\",         caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),         x = \"Date\",         y = \"Interest Rates\",         color = \"Symbol\"     ) +     scale_y_continuous(labels = scales::percent)"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"historical-real-interest-rates","dir":"Articles","previous_headings":"","what":"Historical real interest rates","title":"How to Compute Historical Rates from B3 Future Prices","text":"Differently DI1 contracts, trade nominal interest rates, DAP contracts trade real interest rates.","code":"dap_futures <- df |>     filter(commodity == \"DAP\") |>     mutate(         maturity_date = maturity2date(maturity_code, \"15th day\"),         fixing = following(maturity_date, \"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\"),         adjusted_tax = rates(\"discrete\", business_days / 252, 100000 / price)     ) |>     filter(business_days > 0)  dap_futures |>     filter(symbol %in% c(\"DAPF23\", \"DAPK35\")) |>     ggplot(aes(x = refdate, y = adjusted_tax, group = symbol, color = symbol)) +     geom_line() +     geom_point() +     labs(         title = \"DAP Future Rates - Real Interest Rates\",         caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),         x = \"Date\",         y = \"Interest Rates\",         color = \"Symbol\"     ) +     scale_y_continuous(labels = scales::percent)"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"implied-inflation","dir":"Articles","previous_headings":"","what":"Implied inflation","title":"How to Compute Historical Rates from B3 Future Prices","text":"difference real nominal interest rates can obtain forward inflation implied contracts. Using contracts DI1F23 DAPF23, matures month, difference days. implied inflation can computed division prices contracts.","code":"infl_futures <- df |>     filter(symbol %in% c(\"DI1F23\", \"DAPF23\")) |>     mutate(         maturity_date = if_else(commodity == \"DI1\",             maturity2date(maturity_code),             maturity2date(maturity_code, \"15th day\")         ),         fixing = following(maturity_date, \"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\"),         adjusted_tax = rates(\"discrete\", business_days / 252, 100000 / price)     ) |>     arrange(refdate)  infl_expec <- infl_futures |>     select(symbol, price, refdate) |>     tidyr::pivot_wider(names_from = symbol, values_from = price) |>     mutate(inflation = DAPF23 / DI1F23 - 1)  infl_expec |>     ggplot(aes(x = refdate, y = inflation)) +     geom_line() +     geom_point()"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"forward-rates","dir":"Articles","previous_headings":"","what":"Forward rates","title":"How to Compute Historical Rates from B3 Future Prices","text":"10Y Forward rates implied DI1 Futures prices. contracts DI1F23 DI1F33 used compute 10Y forward rates ranges Jan. 2023 Jan. 2033.","code":"df_fut <- df |>     filter(symbol %in% c(\"DI1F23\", \"DI1F33\")) |>     mutate(         maturity_date = maturity2date(maturity_code) |> following(\"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\")     )  df_du <- df_fut |>     select(refdate, symbol, business_days) |>     tidyr::pivot_wider(names_from = symbol, values_from = business_days) |>     mutate(         du = DI1F33 - DI1F23     ) |>     select(refdate, du)  df_fwd <- df_fut |>     select(refdate, symbol, price) |>     tidyr::pivot_wider(names_from = symbol, values_from = price) |>     inner_join(df_du, by = \"refdate\") |>     mutate(         fwd = (DI1F23 / DI1F33)^(252 / du) - 1     ) |>     select(refdate, fwd) |>     na.omit() df_fwd |>     ggplot(aes(x = refdate, y = fwd)) +     geom_line() +     labs(         x = \"Date\", y = \"Forward Rates\",         title = \"Historical 10Y Forward Rates - F23:F33\",         caption = \"Source B3 - package rb3\"     )"},{"path":"http://wilsonfreitas.github.io/rb3/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wilson Freitas. Author, maintainer. Marcelo Perlin. Author.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Download parse public files released B3 convert theminto useful formats data structures common data analysis practitioners.","code":"@Manual{,   title = {Download and Parse Public Data Released by B3 Exchange},   author = {Wilson Freitas and Marcelo Perlin},   note = {R package version 0.0.1},   year = {2022},   url = {https://github.com/wilsonfreitas/rb3}, }"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"rb3","dir":"","previous_headings":"","what":"Download and Parse Public Data Released by B3 Exchange","title":"Download and Parse Public Data Released by B3 Exchange","text":"Download read bunch o data B3 making easy store, process consume structure way.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Download and Parse Public Data Released by B3 Exchange","text":"documentation available , reference articles real applications can found.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download and Parse Public Data Released by B3 Exchange","text":"","code":"devtools::install_github(\"wilsonfreitas/rb3\")"},{"path":[]},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"yield-curve","dir":"","previous_headings":"Examples","what":"Yield curve","title":"Download and Parse Public Data Released by B3 Exchange","text":"Download use historical yield curve data yc_get.","code":"library(rb3) library(ggplot2) library(stringr)  df_yc <- yc_get(     first_date = Sys.Date() - 255 * 5,     last_date = Sys.Date(),     by = 255 ) #> Skipping download - using cached version #> Skipping download - using cached version #> Skipping download - using cached version #> Skipping download - using cached version  p <- ggplot(     df_yc,     aes(         x = forward_date,         y = r_252,         group = refdate,         color = factor(refdate)     ) ) +     geom_line() +     labs(         title = \"Yield Curves for Brazil\",         subtitle = \"Built using interest rates future contracts\",         caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),         x = \"Forward Date\",         y = \"Annual Interest Rate\",         color = \"Reference Date\"     ) +     theme_light() +     scale_y_continuous(labels = scales::percent)  print(p)"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"futures-prices","dir":"","previous_headings":"Examples","what":"Futures prices","title":"Download and Parse Public Data Released by B3 Exchange","text":"Get settlement future prices futures_get.","code":"library(rb3) library(dplyr)  df <- futures_get(     first_date = \"2022-04-01\",     last_date = \"2022-04-29\",     by = 5 )  df |> filter(commodity == \"DI1\") #> # A tibble: 153 x 8 #>    refdate    commodity maturity_code symbol price_previous   price change settlement_value #>    <date>     <chr>     <chr>         <chr>           <dbl>   <dbl>  <dbl>            <dbl> #>  1 2022-04-01 DI1       J22           DI1J22        100000. 100000    0.01             0.01 #>  2 2022-04-01 DI1       K22           DI1K22         99172.  99172.  -0.19             0.19 #>  3 2022-04-01 DI1       M22           DI1M22         98159.  98160.   0.96             0.96 #>  4 2022-04-01 DI1       N22           DI1N22         97182.  97185.   3.56             3.56 #>  5 2022-04-01 DI1       Q22           DI1Q22         96199.  96210.  11.3             11.3  #>  6 2022-04-01 DI1       U22           DI1U22         95138.  95159.  21.6             21.6  #>  7 2022-04-01 DI1       V22           DI1V22         94174.  94209.  34.9             34.9  #>  8 2022-04-01 DI1       X22           DI1X22         93265.  93314.  48.8             48.8  #>  9 2022-04-01 DI1       Z22           DI1Z22         92365.  92423.  57.3             57.3  #> 10 2022-04-01 DI1       F23           DI1F23         91405.  91472.  67.4             67.4  #> # ... with 143 more rows"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"equity-data","dir":"","previous_headings":"Examples","what":"Equity data","title":"Download and Parse Public Data Released by B3 Exchange","text":"Equity closing data (without price adjustments) available thru cotahist_get. Funds data BDRs data Equity options","code":"library(rb3) library(bizdays)  date <- preceding(Sys.Date(), \"Brazil/ANBIMA\") # last business day ch <- cotahist_get(date, \"daily\") #> Skipping download - using cached version cotahist_equity_get(ch) #> # A tibble: 378 x 13 #>    refdate    symbol  open  high   low close average best_bid best_ask    volume traded_contracts transactions_quantity distribution_id #>    <date>     <chr>  <dbl> <dbl> <dbl> <dbl>   <dbl>    <dbl>    <dbl>     <dbl>            <int>                 <int>           <int> #>  1 2022-04-29 AALR3  19.7  19.8  19.3  19.4    19.5     19.4     19.4   14055007           721500                  2050             102 #>  2 2022-04-29 ABCB4  16.8  16.8  15.8  15.8    16.1     15.8     16     28379427          1763100                  6273             140 #>  3 2022-04-29 ABEV3  14.8  15    14.5  14.5    14.7     14.5     14.6  384931858         26145100                 23420             125 #>  4 2022-04-29 AERI3   5.12  5.18  4.88  4.88    5        4.88     4.89  11565634          2309900                  6249             101 #>  5 2022-04-29 AESB3  11.2  11.3  11.0  11.0    11.1     11.0     11.0   38200620          3443700                  8291             102 #>  6 2022-04-29 AGRO3  34.3  34.7  33.8  34.0    34.2     34.0     34     37912461          1107600                  4766             112 #>  7 2022-04-29 AGXY3   9.2   9.8   9.11  9.8     9.59     9.13     9.8    1504789           156900                   349             100 #>  8 2022-04-29 ALLD3  14.0  14.2  13.8  14.0    14.0     13.8     14.0     952543            68100                   303             102 #>  9 2022-04-29 ALPA3  19    19.5  19    19.5    19.2     18.5     19.3       3850              200                     2             231 #> 10 2022-04-29 ALPA4  20.4  20.6  19.5  19.6    20.0     19.6     19.6   84525397          4236000                 20368             231 #> # ... with 368 more rows cotahist_funds_get(ch) #> # A tibble: 366 x 13 #>    refdate    symbol  open  high   low close average best_bid best_ask   volume traded_contracts transactions_quantity distribution_id #>    <date>     <chr>  <dbl> <dbl> <dbl> <dbl>   <dbl>    <dbl>    <dbl>    <dbl>            <int>                 <int>           <int> #>  1 2022-04-29 BZLI11  16.9  16.9  16.9  16.9    16.9     16.9     17.7     135.                8                     2             100 #>  2 2022-04-29 ABCP11  74.4  74.9  73.2  73.6    73.6     73.3     73.6  151215.             2054                   205             313 #>  3 2022-04-29 AFHI11  99.2  99.2  98.6  99.0    98.9     99.0     99.0 1000056.            10115                   709             113 #>  4 2022-04-29 AFOF11  93.9  94.4  92.5  93.4    93.2     92.8     93.4  205333.             2202                    87             113 #>  5 2022-04-29 AIEC11  80.4  81.0  79.5  80.2    80.0     80.2     80.2 1146269.            14330                  3001             119 #>  6 2022-04-29 ALMI11 930   930   930   930     928.     930      986.     5571.                6                     5             250 #>  7 2022-04-29 ALZR11 115.  116.  115.  116.    116.     116.     116.   659266.             5691                   737             154 #>  8 2022-04-29 APTO11  10.4  10.4  10.3  10.4    10.4     10.4     10.4    9442.              908                    54             104 #>  9 2022-04-29 ARCT11 105   105.  105.  105.    105.     105.     105.  2524851.            24029                  3965             125 #> 10 2022-04-29 ARRI11  98.8  99.0  96.5  98.8    98.1     98.7     98.8  437927.             4462                   288             130 #> # ... with 356 more rows cotahist_bdrs_get(ch) #> # A tibble: 523 x 13 #>    refdate    symbol  open  high   low close average best_bid best_ask  volume traded_contracts transactions_quantity distribution_id #>    <date>     <chr>  <dbl> <dbl> <dbl> <dbl>   <dbl>    <dbl>    <dbl>   <dbl>            <int>                 <int>           <int> #>  1 2022-04-29 A1AP34  61.5  61.5  61.5  61.5    61.5     61.5     70.1  44287.              720                     1             110 #>  2 2022-04-29 A1BB34  37.4  37.5  36.9  36.9    36.9     36.9     58.5 185763.             5035                     6             102 #>  3 2022-04-29 A1CR34  59.6  59.6  58.7  58.7    58.7     58.7      0    42918.              731                     2             106 #>  4 2022-04-29 A1DM34 447.  447.  443.  443.    445.       0        0     1779.                4                     4             109 #>  5 2022-04-29 A1EG34  25.5  25.6  25.5  25.6    25.6     25.5     25.6   3175.              124                     3             102 #>  6 2022-04-29 A1ES34 101.  101.  101.  101.    101.     101.       0    66587.              660                     1             110 #>  7 2022-04-29 A1GI34 302.  302.  302.  302.    302.       0      303.     302.                1                     1             109 #>  8 2022-04-29 A1IV34  31.2  31.2  31.2  31.2    31.2     31.2     32.9  10618.              340                     1             106 #>  9 2022-04-29 A1KA34  46.2  46.2  46.2  46.2    46.2     46.2      0    73522.             1590                     1             101 #> 10 2022-04-29 A1LB34 978   978   950.  950.    951.     950.    1061    58005                61                     2             109 #> # ... with 513 more rows cotahist_equity_options_get(ch) #> # A tibble: 4,794 x 14 #>    refdate    symbol   type  strike maturity_date  open  high   low close average volume traded_contracts transactions_quantity distribution_id #>    <date>     <chr>    <fct>  <dbl> <date>        <dbl> <dbl> <dbl> <dbl>   <dbl>  <dbl>            <int>                 <int>           <int> #>  1 2022-04-29 ABEVE135 Call    13.5 2022-05-20     1.46  1.55  1.46  1.48    1.53 323814           210700                    33             125 #>  2 2022-04-29 ABEVE162 Call    16.3 2022-05-20     0.06  0.07  0.05  0.05    0.05    412             7800                     8             125 #>  3 2022-04-29 ABEVE140 Call    14.0 2022-05-20     1.07  1.19  0.92  0.92    1.07  12437            11600                    11             125 #>  4 2022-04-29 ABEVE167 Call    16.8 2022-05-20     0.04  0.04  0.03  0.03    0.03    185             5300                     9             125 #>  5 2022-04-29 ABEVE150 Call    15.0 2022-05-20     0.37  0.46  0.28  0.3     0.37 796102          2102300                   266             125 #>  6 2022-04-29 ABEVE130 Call    13.0 2022-05-20     1.98  1.98  1.84  1.84    1.91   3820             2000                     2             125 #>  7 2022-04-29 ALSOE270 Call    27   2022-05-20     0.1   0.1   0.1   0.1     0.1      30              300                     1             101 #>  8 2022-04-29 ALSOM205 Put     20.5 2023-01-20     1.8   1.8   1.8   1.8     1.8   10980             6100                     1             101 #>  9 2022-04-29 AMERE333 Call    33.3 2022-05-20     0.05  0.05  0.05  0.05    0.05    505            10100                     2             101 #> 10 2022-04-29 AMERE338 Call    33.8 2022-05-20     0.07  0.07  0.07  0.07    0.07      7              100                     1             101 #> # ... with 4,784 more rows"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns rb3 package cache directory — cachedir","title":"Returns rb3 package cache directory — cachedir","text":"Returns rb3 package cache directory","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns rb3 package cache directory — cachedir","text":"","code":"cachedir()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns rb3 package cache directory — cachedir","text":"string file path rb3 cache directory","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns rb3 package cache directory — cachedir","text":"","code":"cachedir() #> [1] \"/tmp/RtmpD4v54h/rb3-cache\""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CDI rate and IDI index value from B3 front page — cdi-idi","title":"Get CDI rate and IDI index value from B3 front page — cdi-idi","text":"Scrape page https://www.b3.com.br/ get last available CDI rate IDI index values.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CDI rate and IDI index value from B3 front page — cdi-idi","text":"","code":"cdi_get()  idi_get()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CDI rate and IDI index value from B3 front page — cdi-idi","text":"data.frame CDI rate IDI index values.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CDI rate and IDI index value from B3 front page — cdi-idi","text":"","code":"if (FALSE) { df <- cdi_get() df <- idi_get() }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear cache directory — clearcache","title":"Clear cache directory — clearcache","text":"Clear cache directory","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear cache directory — clearcache","text":"","code":"clearcache()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear cache directory — clearcache","text":"return","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear cache directory — clearcache","text":"","code":"clearcache()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":null,"dir":"Reference","previous_headings":"","what":"Get month from maturity code — code2month","title":"Get month from maturity code — code2month","text":"Get corresponding month letters represent maturities futures contracts.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get month from maturity code — code2month","text":"","code":"code2month(x)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get month from maturity code — code2month","text":"x character letters represent month maturity futures contracts.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get month from maturity code — code2month","text":"vector integers","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get month from maturity code — code2month","text":"","code":"code2month(c(\"F\", \"G\", \"H\", \"J\", \"K\", \"M\", \"N\", \"Q\", \"U\", \"V\", \"X\", \"Z\")) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12"},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts B3 messy files to structured formats — convert_to","title":"Converts B3 messy files to structured formats — convert_to","text":"Convert B3 files structured formats based template.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts B3 messy files to structured formats — convert_to","text":"","code":"convert_to(filename, template = NULL, parse_fields = TRUE, format = \"csv\")"},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts B3 messy files to structured formats — convert_to","text":"filename string containing path file. template string template name. parse_fields logical indicating fields must parsed. format output format","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts B3 messy files to structured formats — convert_to","text":"string file path generated file.","code":""},{"path":[]},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts B3 messy files to structured formats — convert_to","text":"","code":"if (FALSE) { f <- system.file(\"extdata/Indic.txt\", package = \"rb3\") res <- convert_to(f, output_format = \"csv\") res <- convert_to(f, output_format = \"json\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from COTAHIST dataset — cotahist-extracts","title":"Extract data from COTAHIST dataset — cotahist-extracts","text":"Extracts specific data COTAHIST dataset: stocks, funds, BDRs, ETFs, UNITs, options stocks, options indexes, ...","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from COTAHIST dataset — cotahist-extracts","text":"","code":"cotahist_equity_get(x)  cotahist_bdrs_get(x)  cotahist_units_get(x)  cotahist_funds_get(x)  cotahist_indexes_get(x)  cotahist_equity_options_get(x)  cotahist_index_options_get(x)  cotahist_funds_options_get(x)  cotahist_units_options_get(x)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from COTAHIST dataset — cotahist-extracts","text":"x COTAHIST dataset returned cotahist_get.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from COTAHIST dataset — cotahist-extracts","text":"data.frame prices, volume, traded quantities informations","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data from COTAHIST dataset — cotahist-extracts","text":"","code":"if (FALSE) { df <- cotahist_equity_get(x) } if (FALSE) { df <- cotahist_brds_get(x) } if (FALSE) { df <- cotahist_units_get(x) } if (FALSE) { df <- cotahist_funds_get(x) } if (FALSE) { df <- cotahist_indexes_get(x) } if (FALSE) { df <- cotahist_equity_options_get(x) } if (FALSE) { df <- cotahist_index_options_get(x) } if (FALSE) { df <- cotahist_funds_options_get(x) } if (FALSE) { df <- cotahist_units_options_get(x) }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get COTAHIST data from B3 — cotahist_get","title":"Get COTAHIST data from B3 — cotahist_get","text":"Download COTAHIST file parses returning structured data R objects.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get COTAHIST data from B3 — cotahist_get","text":"","code":"cotahist_get(   refdate,   type = c(\"yearly\", \"monthly\", \"daily\"),   cache_folder = cachedir(),   do_cache = TRUE )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get COTAHIST data from B3 — cotahist_get","text":"refdate reference date used download file. reference date formated year/month/day according given type. Accepts ISO formated date strings. type string yearly data given year, monthly data given month daily given day. cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE) valueable information HistoricalPrices element returned list. Header Trailer informations regarding file generation. HistoricalPrices element data.frame data many assets traded stock exchange: stocks, bdrs, funds, ETFs, equity options, forward contracts equities warrants due corporate events.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get COTAHIST data from B3 — cotahist_get","text":"list 3 data.frames: Header, HistoricalPrices, Trailer.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get COTAHIST data from B3 — cotahist_get","text":"","code":"if (FALSE) { # get all data to the year of 2001 df_2001 <- cotahist_get(\"2001-01-01\", \"yearly\") # get data of January of 2001 df_200101 <- cotahist_get(\"2001-01-01\", \"monthly\") # get data of 2001-01-02 df_daily <- cotahist_get(\"2001-01-02\", \"daily\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Display templates — display_template","title":"Display templates — display_template","text":"display_template opens RStudio gadget addin allows users query specific attributes templates.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display templates — display_template","text":"","code":"display_template()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display templates — display_template","text":"Addin return","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download datasets — download_data","title":"Download datasets — download_data","text":"Download datasets given template.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download datasets — download_data","text":"","code":"download_data(template, cache_folder = cachedir(), do_cache = TRUE, ...)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download datasets — download_data","text":"template template name cache_folder Location cache folder (default = cachedir()) do_cache logical indicating existing file (previously downloaded) used replaced. ... aditional arguments","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download datasets — download_data","text":"string file path downloaded file NULL download fails. function downloads data sets templates specifies downloader attribute. dest provided, cache_folder used file template id saved inside .","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download datasets — download_data","text":"","code":"if (FALSE) { fname <- download_data(\"CDIIDI\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get futures prices from trading session settlements page — futures_get","title":"Get futures prices from trading session settlements page — futures_get","text":"Scrape page https://www.b3.com.br/en_us/market-data--indices/data-services/market-data/historical-data/derivatives/trading-session-settlements/ get futures prices.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get futures prices from trading session settlements page — futures_get","text":"","code":"futures_get(   first_date = Sys.Date() - 5,   last_date = Sys.Date(),   by = 1,   cache_folder = cachedir(),   do_cache = TRUE )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get futures prices from trading session settlements page — futures_get","text":"first_date First date (\"YYYY-MM-DD\") last_date Last date (\"YYYY-MM-DD\") Number days fetched dates (default = 1) cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE)","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get futures prices from trading session settlements page — futures_get","text":"data.frame futures prices.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get futures prices from trading session settlements page — futures_get","text":"","code":"if (FALSE) { df <- futures_get(\"2022-04-18\", \"2022-04-22\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get maturity date from maturity code — maturity2date","title":"Get maturity date from maturity code — maturity2date","text":"Get corresponding maturity date three characters string represent maturity futures contracts.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get maturity date from maturity code — maturity2date","text":"","code":"maturity2date(x, expr = \"first day\")"},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get maturity date from maturity code — maturity2date","text":"x character vector three letters string represent maturity futures contracts. expr string indicates day use maturity date. See bizdays::getdate details argument.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get maturity date from maturity code — maturity2date","text":"Date vector maturity dates","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get maturity date from maturity code — maturity2date","text":"","code":"maturity2date(c(\"F22\", \"F23\", \"G23\", \"H23\", \"F45\"), \"first day\") #> [1] \"2022-01-01\" \"2023-01-01\" \"2023-02-01\" \"2023-03-01\" \"2045-01-01\" maturity2date(c(\"F23\", \"K35\"), \"15th day\") #> [1] \"2023-01-15\" \"2035-05-15\""},{"path":"http://wilsonfreitas.github.io/rb3/reference/rb3.html","id":null,"dir":"Reference","previous_headings":"","what":"Read files from Brazilian Financial Market — rb3","title":"Read files from Brazilian Financial Market — rb3","text":"Read many files used Brazilian Financial Market convert useful formats data structures.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and parses files delivered by B3 — read_marketdata","title":"Read and parses files delivered by B3 — read_marketdata","text":"B3, previously BMF&Bovespa, used deliver many files diverse set valuable data informations can used study can called marketdata. files informations futures, option, interest rates, currency rates, bonds many subjects.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and parses files delivered by B3 — read_marketdata","text":"","code":"read_marketdata(   filename,   template = NULL,   parse_fields = TRUE,   cache_folder = cachedir(),   do_cache = TRUE )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and parses files delivered by B3 — read_marketdata","text":"filename string containing path file. template string template name. parse_fields logical indicating fields must parsed. cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE) template default value filename, given file name equals one template filename attribute, matched template used parse file. Otherwise template must provided. function show_templates can used view available templates default filenames.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and parses files delivered by B3 — read_marketdata","text":"data.frame list data.frame containing data parsed files.","code":""},{"path":[]},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and parses files delivered by B3 — read_marketdata","text":"","code":"if (FALSE) { # Eletro.txt matches the filename of Eletro template path <- \"Eletro.txt\" df <- read_marketdata(path) path <- \"Indic.txt\" df <- read_marketdata(path, template = \"Indic\") path <- \"PUWEB.TXT\" df <- read_marketdata(path, template = \"PUWEB\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"Show templates. — show_templates","title":"Show templates. — show_templates","text":"display_template opens RStudio gadget addin allows users view available templates.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show templates. — show_templates","text":"","code":"show_templates()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show templates. — show_templates","text":"Addin return","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches Yield Curve Data from B3 — yc_get","title":"Fetches Yield Curve Data from B3 — yc_get","text":"Downloads yield curve data B3 website https://www2.bmf.com.br/pages/portal/bmfbovespa/lumis/lum-taxas-referenciais-bmf-ptBR.asp. Particularly, import data DI X Pre. See https://www.b3.com.br/data/files/8B/F5/11/68/5391F61043E561F6AC094EA8/Manual_de_Curvas.pdf details.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches Yield Curve Data from B3 — yc_get","text":"","code":"yc_get(   first_date = Sys.Date() - 5,   last_date = Sys.Date(),   by = 1,   cache_folder = cachedir(),   do_cache = TRUE )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetches Yield Curve Data from B3 — yc_get","text":"first_date First date (\"YYYY-MM-DD\") last_date Last date (\"YYYY-MM-DD\") Number days fetched dates (default = 1) cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE)","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches Yield Curve Data from B3 — yc_get","text":"dataframe/tibble yield curve data","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches Yield Curve Data from B3 — yc_get","text":"","code":"if (FALSE) { df_yc <- yc_get() head(df_yc) }"}]
