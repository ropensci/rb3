[{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":null,"dir":"","previous_headings":"","what":"Contributing to rb3","title":"Contributing to rb3","text":"First, thanks interest package apraisal contributing codebase rb3. academic, R projects official funding. always nice community helping maintaing code. main links contributing:","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to rb3","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to rb3","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"share-the-love-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Share the love ‚ù§Ô∏è","title":"Contributing to rb3","text":"Think our_package useful? Let others discover , telling person, via Twitter blog post. Using our_package paper writing? Consider citing .","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"report-a-bug-","dir":"","previous_headings":"How you can contribute","what":"Report a bug üêõ","title":"Contributing to rb3","text":"‚Äôve found bug using package, please report creating issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"improve-the-documentation-","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation üìñ","title":"Contributing to rb3","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"the-website","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"The website","title":"Contributing to rb3","text":"website generated pkgdown. means don‚Äôt write html: content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation. , report issue can point right direction.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"Function documentation","title":"Contributing to rb3","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"contribute-code-","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to rb3","text":"Care fix bugs implement new functionality our_package? Awesome! üëè look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to rb3","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream master. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). Check code devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rb3 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"historical-nominal-interest-rates","dir":"Articles","previous_headings":"","what":"Historical nominal interest rates","title":"How to Compute Historical Rates from B3 Future Prices","text":"interest rates can extracted futures prices. DI1 futures matures first day month. code generates maturities three characters maturity codes. business days implied rates calculated fixedincome::rates function, know notional amount contracts 100000. graphic can see dynamics nominal interest rates contracts DI1F23 DI1F33. contracts exactly 10 years distant .","code":"di1_futures <- df |>     filter(commodity == \"DI1\") |>     mutate(         maturity_date = maturity2date(maturity_code),         fixing = following(maturity_date, \"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\"),         adjusted_tax = rates(\"discrete\", business_days / 252, 100000 / price)     ) |>     filter(business_days > 0)  di1_futures |>     filter(symbol %in% c(\"DI1F23\", \"DI1F33\")) |>     ggplot(aes(x = refdate, y = adjusted_tax, color = symbol, group = symbol)) +     geom_line() +     geom_point() +     labs(         title = \"DI1 Future Rates - Nominal Interest Rates\",         caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),         x = \"Date\",         y = \"Interest Rates\",         color = \"Symbol\"     ) +     scale_y_continuous(labels = scales::percent)"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"historical-real-interest-rates","dir":"Articles","previous_headings":"","what":"Historical real interest rates","title":"How to Compute Historical Rates from B3 Future Prices","text":"Differently DI1 contracts, trade nominal interest rates, DAP contracts trade real interest rates.","code":"dap_futures <- df |>     filter(commodity == \"DAP\") |>     mutate(         maturity_date = maturity2date(maturity_code, \"15th day\"),         fixing = following(maturity_date, \"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\"),         adjusted_tax = rates(\"discrete\", business_days / 252, 100000 / price)     ) |>     filter(business_days > 0)  dap_futures |>     filter(symbol %in% c(\"DAPF23\", \"DAPK35\")) |>     ggplot(aes(x = refdate, y = adjusted_tax, group = symbol, color = symbol)) +     geom_line() +     geom_point() +     labs(         title = \"DAP Future Rates - Real Interest Rates\",         caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),         x = \"Date\",         y = \"Interest Rates\",         color = \"Symbol\"     ) +     scale_y_continuous(labels = scales::percent)"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"implied-inflation","dir":"Articles","previous_headings":"","what":"Implied inflation","title":"How to Compute Historical Rates from B3 Future Prices","text":"difference real nominal interest rates can obtain forward inflation implied contracts. Using contracts DI1F23 DAPF23, matures month, difference days. implied inflation can computed division prices contracts.","code":"infl_futures <- df |>     filter(symbol %in% c(\"DI1F23\", \"DAPF23\")) |>     mutate(         maturity_date = if_else(commodity == \"DI1\",             maturity2date(maturity_code),             maturity2date(maturity_code, \"15th day\")         ),         fixing = following(maturity_date, \"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\"),         adjusted_tax = rates(\"discrete\", business_days / 252, 100000 / price)     ) |>     arrange(refdate)  infl_expec <- infl_futures |>     select(symbol, price, refdate) |>     tidyr::pivot_wider(names_from = symbol, values_from = price) |>     mutate(inflation = DAPF23 / DI1F23 - 1)  infl_expec |>     ggplot(aes(x = refdate, y = inflation)) +     geom_line() +     geom_point()"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"forward-rates","dir":"Articles","previous_headings":"","what":"Forward rates","title":"How to Compute Historical Rates from B3 Future Prices","text":"10Y Forward rates implied DI1 Futures prices. contracts DI1F23 DI1F33 used compute 10Y forward rates ranges Jan.¬†2023 Jan.¬†2033.","code":"df_fut <- df |>     filter(symbol %in% c(\"DI1F23\", \"DI1F33\")) |>     mutate(         maturity_date = maturity2date(maturity_code) |> following(\"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\")     )  df_du <- df_fut |>     select(refdate, symbol, business_days) |>     tidyr::pivot_wider(names_from = symbol, values_from = business_days) |>     mutate(         du = DI1F33 - DI1F23     ) |>     select(refdate, du)  df_fwd <- df_fut |>     select(refdate, symbol, price) |>     tidyr::pivot_wider(names_from = symbol, values_from = price) |>     inner_join(df_du, by = \"refdate\") |>     mutate(         fwd = (DI1F23 / DI1F33)^(252 / du) - 1     ) |>     select(refdate, fwd) |>     na.omit() df_fwd |>     ggplot(aes(x = refdate, y = fwd)) +     geom_line() +     labs(         x = \"Date\", y = \"Forward Rates\",         title = \"Historical 10Y Forward Rates - F23:F33\",         caption = \"Source B3 - package rb3\"     )"},{"path":"http://wilsonfreitas.github.io/rb3/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wilson Freitas. Author, maintainer. Marcelo Perlin. Author.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Download parse public files released B3 convert theminto useful formats data structures common data analysis practitioners.","code":"@Manual{,   title = {Download and Parse Public Data Released by B3 Exchange},   author = {Wilson Freitas and Marcelo Perlin},   note = {R package version 0.0.1},   year = {2022},   url = {https://github.com/wilsonfreitas/rb3}, }"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"rb3","dir":"","previous_headings":"","what":"Download and Parse Public Data Released by B3 Exchange","title":"Download and Parse Public Data Released by B3 Exchange","text":"B3 main financial exchange Brazil, offering support access trading systems equity fixed income markets. website can find vast number datasets regarding prices transactions contracts available trading markets, including: equities (unadjusted corporate events) futures FII (Reits) options BDRs historical yield curves (calculated futures contracts) Package rb3 facilitates downloading reading datasets B3, making easy consume R structured way. datasets can used industry academic studies.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Download and Parse Public Data Released by B3 Exchange","text":"documentation available pkgdown page, articles (vignettes) real applications can found.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download and Parse Public Data Released by B3 Exchange","text":"","code":"install.packages(\"rb3\") # github (Development branch) if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"wilsonfreitas/rb3\")"},{"path":[]},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"yield-curve","dir":"","previous_headings":"Examples","what":"Yield curve","title":"Download and Parse Public Data Released by B3 Exchange","text":"Download use historical yield curve data yc_get.","code":"library(rb3) library(ggplot2) library(stringr)  df_yc <- yc_mget(   first_date = Sys.Date() - 255 * 5,   last_date = Sys.Date(),   by = 255 )  p <- ggplot(   df_yc,   aes(     x = forward_date,     y = r_252,     group = refdate,     color = factor(refdate)   ) ) +   geom_line() +   labs(     title = \"Yield Curves for Brazil\",     subtitle = \"Built using interest rates future contracts\",     caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),     x = \"Forward Date\",     y = \"Annual Interest Rate\",     color = \"Reference Date\"   ) +   theme_light() +   scale_y_continuous(labels = scales::percent)  print(p)"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"futures-prices","dir":"","previous_headings":"Examples","what":"Futures prices","title":"Download and Parse Public Data Released by B3 Exchange","text":"Get settlement future prices futures_get.","code":"library(rb3) library(dplyr)  df <- futures_mget(   first_date = \"2022-04-01\",   last_date = \"2022-04-29\",   by = 5 )  glimpse(   df |>     filter(commodity == \"DI1\") ) #> Rows: 153 #> Columns: 8 #> $ refdate          <date> 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022‚Ä¶ #> $ commodity        <chr> \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1‚Ä¶ #> $ maturity_code    <chr> \"J22\", \"K22\", \"M22\", \"N22\", \"Q22\", \"U22\", \"V22\", \"X22‚Ä¶ #> $ symbol           <chr> \"DI1J22\", \"DI1K22\", \"DI1M22\", \"DI1N22\", \"DI1Q22\", \"DI‚Ä¶ #> $ price_previous   <dbl> 99999.99, 99172.50, 98159.27, 97181.87, 96199.14, 951‚Ä¶ #> $ price            <dbl> 100000.00, 99172.31, 98160.23, 97185.43, 96210.42, 95‚Ä¶ #> $ change           <dbl> 0.01, -0.19, 0.96, 3.56, 11.28, 21.61, 34.93, 48.85, ‚Ä¶ #> $ settlement_value <dbl> 0.01, 0.19, 0.96, 3.56, 11.28, 21.61, 34.93, 48.85, 5‚Ä¶"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"equity-data","dir":"","previous_headings":"Examples","what":"Equity data","title":"Download and Parse Public Data Released by B3 Exchange","text":"Equity closing data (without price adjustments) available thru cotahist_get. Funds data BDRs data Equity options","code":"library(rb3) library(bizdays) #>  #> Attaching package: 'bizdays' #> The following object is masked from 'package:stats': #>  #>     offset  # fix for ssl error (only in linux) if (Sys.info()[\"sysname\"] == \"Linux\") {   httr::set_config(     httr::config(ssl_verifypeer = FALSE)   ) }  date <- preceding(Sys.Date() - 1, \"Brazil/ANBIMA\") # last business day ch <- cotahist_get(date, \"daily\")  glimpse(   cotahist_equity_get(ch) ) #> Rows: 382 #> Columns: 13 #> $ refdate               <date> 2022-05-13, 2022-05-13, 2022-05-13, 2022-05-13,‚Ä¶ #> $ symbol                <chr> \"AALR3\", \"ABCB4\", \"ABEV3\", \"AERI3\", \"AESB3\", \"AF‚Ä¶ #> $ open                  <dbl> 19.81, 16.16, 14.55, 3.83, 10.79, 9.06, 31.60, 9‚Ä¶ #> $ high                  <dbl> 19.89, 16.55, 14.67, 3.93, 10.81, 9.50, 32.40, 9‚Ä¶ #> $ low                   <dbl> 19.43, 16.06, 14.45, 3.72, 10.64, 9.06, 31.54, 9‚Ä¶ #> $ close                 <dbl> 19.75, 16.54, 14.54, 3.75, 10.64, 9.35, 32.06, 9‚Ä¶ #> $ average               <dbl> 19.66, 16.38, 14.55, 3.80, 10.69, 9.38, 31.99, 9‚Ä¶ #> $ best_bid              <dbl> 19.75, 16.45, 14.54, 3.74, 10.64, 9.35, 32.06, 9‚Ä¶ #> $ best_ask              <dbl> 19.80, 16.54, 14.58, 3.75, 10.65, 9.47, 32.08, 9‚Ä¶ #> $ volume                <dbl> 13692159, 10155477, 194865062, 13607948, 1187700‚Ä¶ #> $ traded_contracts      <int> 696300, 619700, 13385100, 3571700, 1110400, 1800‚Ä¶ #> $ transactions_quantity <int> 2873, 4115, 29016, 7499, 4533, 16, 3363, 492, 63‚Ä¶ #> $ distribution_id       <int> 102, 140, 125, 101, 102, 119, 112, 101, 103, 231‚Ä¶ glimpse(   cotahist_funds_get(ch) ) #> Rows: 359 #> Columns: 13 #> $ refdate               <date> 2022-05-13, 2022-05-13, 2022-05-13, 2022-05-13,‚Ä¶ #> $ symbol                <chr> \"ABCP11\", \"AFHI11\", \"AFOF11\", \"AIEC11\", \"ALMI11\"‚Ä¶ #> $ open                  <dbl> 72.48, 99.52, 89.00, 78.55, 950.00, 115.19, 10.2‚Ä¶ #> $ high                  <dbl> 72.78, 100.80, 89.49, 78.99, 951.00, 115.98, 10.‚Ä¶ #> $ low                   <dbl> 72.16, 99.50, 88.52, 78.55, 930.00, 115.19, 10.2‚Ä¶ #> $ close                 <dbl> 72.24, 100.65, 89.00, 78.93, 950.00, 115.70, 10.‚Ä¶ #> $ average               <dbl> 72.38, 100.13, 89.02, 78.90, 947.15, 115.63, 10.‚Ä¶ #> $ best_bid              <dbl> 72.24, 100.60, 88.99, 78.91, 930.50, 115.69, 10.‚Ä¶ #> $ best_ask              <dbl> 72.53, 100.65, 89.00, 78.99, 951.00, 115.70, 10.‚Ä¶ #> $ volume                <dbl> 67023.89, 1305373.39, 130064.77, 57283.07, 79561‚Ä¶ #> $ traded_contracts      <int> 926, 13036, 1461, 726, 84, 8613, 3181, 30794, 24‚Ä¶ #> $ transactions_quantity <int> 231, 542, 79, 129, 77, 1039, 99, 3989, 221, 3, 7‚Ä¶ #> $ distribution_id       <int> 314, 113, 113, 120, 250, 154, 105, 126, 131, 136‚Ä¶ glimpse(   cotahist_bdrs_get(ch) ) #> Rows: 509 #> Columns: 13 #> $ refdate               <date> 2022-05-13, 2022-05-13, 2022-05-13, 2022-05-13,‚Ä¶ #> $ symbol                <chr> \"A1AP34\", \"A1BB34\", \"A1CR34\", \"A1DM34\", \"A1EE34\"‚Ä¶ #> $ open                  <dbl> 67.80, 36.71, 65.10, 443.76, 234.24, 26.28, 294.‚Ä¶ #> $ high                  <dbl> 67.80, 36.71, 65.10, 443.76, 235.20, 26.28, 295.‚Ä¶ #> $ low                   <dbl> 66.79, 36.23, 64.56, 430.00, 233.77, 26.10, 293.‚Ä¶ #> $ close                 <dbl> 66.79, 36.25, 64.62, 430.00, 235.00, 26.10, 295.‚Ä¶ #> $ average               <dbl> 67.43, 36.31, 64.68, 434.09, 234.62, 26.22, 294.‚Ä¶ #> $ best_bid              <dbl> 0.00, 0.00, 54.00, 0.00, 0.00, 0.00, 0.00, 0.00,‚Ä¶ #> $ best_ask              <dbl> 0.00, 38.00, 0.00, 0.00, 0.00, 27.43, 0.00, 0.00‚Ä¶ #> $ volume                <dbl> 3709.04, 435.83, 14619.84, 8247.78, 14781.36, 18‚Ä¶ #> $ traded_contracts      <int> 55, 12, 226, 19, 63, 7, 49, 64, 2, 3, 1, 6, 7, 1‚Ä¶ #> $ transactions_quantity <int> 6, 12, 38, 5, 36, 5, 46, 45, 1, 3, 1, 3, 1, 15, ‚Ä¶ #> $ distribution_id       <int> 110, 102, 106, 109, 109, 102, 110, 110, 106, 101‚Ä¶ glimpse(   cotahist_equity_options_get(ch) ) #> Rows: 6,059 #> Columns: 14 #> $ refdate               <date> 2022-05-13, 2022-05-13, 2022-05-13, 2022-05-13,‚Ä¶ #> $ symbol                <chr> \"ABEVR155\", \"ABEVR180\", \"ABEVX20\", \"ABEVR154\", \"‚Ä¶ #> $ type                  <fct> Put, Put, Put, Put, Put, Put, Put, Put, Call, Ca‚Ä¶ #> $ strike                <dbl> 14.97, 17.47, 19.47, 15.47, 12.79, 16.29, 23.00,‚Ä¶ #> $ maturity_date         <date> 2022-06-17, 2022-06-17, 2023-12-15, 2022-06-17,‚Ä¶ #> $ open                  <dbl> 0.69, 2.72, 3.30, 0.97, 0.01, 1.62, 1.80, 1.53, ‚Ä¶ #> $ high                  <dbl> 0.71, 2.81, 3.30, 1.03, 0.02, 1.62, 2.20, 1.53, ‚Ä¶ #> $ low                   <dbl> 0.59, 2.72, 3.30, 0.91, 0.01, 1.62, 1.80, 1.53, ‚Ä¶ #> $ close                 <dbl> 0.60, 2.81, 3.30, 0.92, 0.01, 1.62, 2.10, 1.53, ‚Ä¶ #> $ average               <dbl> 0.65, 2.74, 3.30, 0.96, 0.01, 1.62, 2.06, 1.53, ‚Ä¶ #> $ volume                <dbl> 414290, 541506, 66000, 201996, 1057, 81000, 825,‚Ä¶ #> $ traded_contracts      <int> 637000, 197000, 20000, 209700, 105400, 50000, 40‚Ä¶ #> $ transactions_quantity <int> 99, 6, 1, 172, 13, 1, 4, 1, 1, 1, 2, 8, 1, 1, 7,‚Ä¶ #> $ distribution_id       <int> 124, 124, 124, 125, 125, 125, 231, 101, 113, 113‚Ä¶"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns rb3 package cache directory ‚Äî cachedir","title":"Returns rb3 package cache directory ‚Äî cachedir","text":"Returns rb3 package cache directory","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns rb3 package cache directory ‚Äî cachedir","text":"","code":"cachedir()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns rb3 package cache directory ‚Äî cachedir","text":"string file path rb3 cache directory","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns rb3 package cache directory ‚Äî cachedir","text":"","code":"cachedir() #> [1] \"/tmp/RtmpKLCNSL/rb3-cache\""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CDI rate and IDI index value from B3 front page ‚Äî cdi-idi","title":"Get CDI rate and IDI index value from B3 front page ‚Äî cdi-idi","text":"Scrape page https://www.b3.com.br/ get last available CDI rate IDI index values.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CDI rate and IDI index value from B3 front page ‚Äî cdi-idi","text":"","code":"cdi_get()  idi_get()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CDI rate and IDI index value from B3 front page ‚Äî cdi-idi","text":"data.frame CDI rate IDI index values.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CDI rate and IDI index value from B3 front page ‚Äî cdi-idi","text":"","code":"if (FALSE) { df <- cdi_get() df <- idi_get() }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear cache directory ‚Äî clearcache","title":"Clear cache directory ‚Äî clearcache","text":"Clear cache directory","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear cache directory ‚Äî clearcache","text":"","code":"clearcache()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear cache directory ‚Äî clearcache","text":"return","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear cache directory ‚Äî clearcache","text":"","code":"clearcache()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":null,"dir":"Reference","previous_headings":"","what":"Get month from maturity code ‚Äî code2month","title":"Get month from maturity code ‚Äî code2month","text":"Get corresponding month letters represent maturities futures contracts.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get month from maturity code ‚Äî code2month","text":"","code":"code2month(x)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get month from maturity code ‚Äî code2month","text":"x character letters represent month maturity futures contracts.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get month from maturity code ‚Äî code2month","text":"vector integers","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get month from maturity code ‚Äî code2month","text":"","code":"code2month(c(\"F\", \"G\", \"H\", \"J\", \"K\", \"M\", \"N\", \"Q\", \"U\", \"V\", \"X\", \"Z\")) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12"},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts B3 messy files to structured formats ‚Äî convert_to","title":"Converts B3 messy files to structured formats ‚Äî convert_to","text":"Convert B3 files structured formats based template.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts B3 messy files to structured formats ‚Äî convert_to","text":"","code":"convert_to(   filename,   template = NULL,   parse_fields = TRUE,   format = \"csv\",   destdir = NULL )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts B3 messy files to structured formats ‚Äî convert_to","text":"filename string containing path file. template string template name. parse_fields logical indicating fields must parsed. format output format destdir string destination directory save converted file","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts B3 messy files to structured formats ‚Äî convert_to","text":"string file path generated file.","code":""},{"path":[]},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts B3 messy files to structured formats ‚Äî convert_to","text":"","code":"if (FALSE) { f <- system.file(\"extdata/Indic.txt\", package = \"rb3\") res <- convert_to(f, output_format = \"csv\") res <- convert_to(f, output_format = \"json\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","title":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","text":"Extracts specific data COTAHIST dataset: stocks, funds, BDRs, ETFs, UNITs, options stocks, options indexes, ...","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","text":"","code":"cotahist_equity_get(x)  cotahist_bdrs_get(x)  cotahist_units_get(x)  cotahist_funds_get(x)  cotahist_indexes_get(x)  cotahist_equity_options_get(x)  cotahist_index_options_get(x)  cotahist_funds_options_get(x)  cotahist_units_options_get(x)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","text":"x COTAHIST dataset returned cotahist_get.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","text":"data.frame prices, volume, traded quantities informations","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","text":"","code":"if (FALSE) { df <- cotahist_equity_get(x) } if (FALSE) { df <- cotahist_brds_get(x) } if (FALSE) { df <- cotahist_units_get(x) } if (FALSE) { df <- cotahist_funds_get(x) } if (FALSE) { df <- cotahist_indexes_get(x) } if (FALSE) { df <- cotahist_equity_options_get(x) } if (FALSE) { df <- cotahist_index_options_get(x) } if (FALSE) { df <- cotahist_funds_options_get(x) } if (FALSE) { df <- cotahist_units_options_get(x) }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get COTAHIST data from B3 ‚Äî cotahist_get","title":"Get COTAHIST data from B3 ‚Äî cotahist_get","text":"Download COTAHIST file parses returning structured data R objects.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get COTAHIST data from B3 ‚Äî cotahist_get","text":"","code":"cotahist_get(   refdate,   type = c(\"yearly\", \"monthly\", \"daily\"),   cache_folder = cachedir(),   do_cache = TRUE )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get COTAHIST data from B3 ‚Äî cotahist_get","text":"refdate reference date used download file. reference date formated year/month/day according given type. Accepts ISO formated date strings. type string yearly data given year, monthly data given month daily given day. cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE) valueable information HistoricalPrices element returned list. Header Trailer informations regarding file generation. HistoricalPrices element data.frame data many assets traded stock exchange: stocks, bdrs, funds, ETFs, equity options, forward contracts equities warrants due corporate events.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get COTAHIST data from B3 ‚Äî cotahist_get","text":"list 3 data.frames: Header, HistoricalPrices, Trailer.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get COTAHIST data from B3 ‚Äî cotahist_get","text":"","code":"if (FALSE) { # get all data to the year of 2001 df_2001 <- cotahist_get(\"2001-01-01\", \"yearly\") # get data of January of 2001 df_200101 <- cotahist_get(\"2001-01-01\", \"monthly\") # get data of 2001-01-02 df_daily <- cotahist_get(\"2001-01-02\", \"daily\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Display templates ‚Äî display_template","title":"Display templates ‚Äî display_template","text":"display_template opens RStudio gadget addin allows users query specific attributes templates.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display templates ‚Äî display_template","text":"","code":"display_template()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display templates ‚Äî display_template","text":"Addin return","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display templates ‚Äî display_template","text":"","code":"if (FALSE) { display_template() }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_marketdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download datasets ‚Äî download_marketdata","title":"Download datasets ‚Äî download_marketdata","text":"Download datasets given template.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_marketdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download datasets ‚Äî download_marketdata","text":"","code":"download_marketdata(template, cache_folder = cachedir(), do_cache = TRUE, ...)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_marketdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download datasets ‚Äî download_marketdata","text":"template template name cache_folder Location cache folder (default = cachedir()) do_cache logical indicating existing file (previously downloaded) used replaced. ... aditional arguments","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_marketdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download datasets ‚Äî download_marketdata","text":"string file path downloaded file NULL download fails. function downloads data sets templates specifies downloader attribute. dest provided, cache_folder used file template id saved inside .","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_marketdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download datasets ‚Äî download_marketdata","text":"","code":"if (FALSE) { fname <- download_marketdata(\"CDIIDI\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get futures prices from trading session settlements page ‚Äî futures_get","title":"Get futures prices from trading session settlements page ‚Äî futures_get","text":"Scrape page https://www.b3.com.br/en_us/market-data--indices/data-services/market-data/historical-data/derivatives/trading-session-settlements/ get futures prices.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get futures prices from trading session settlements page ‚Äî futures_get","text":"","code":"futures_mget(   first_date = Sys.Date() - 5,   last_date = Sys.Date(),   by = 1,   cache_folder = cachedir(),   do_cache = TRUE )  futures_get(refdate = Sys.Date(), cache_folder = cachedir(), do_cache = TRUE)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get futures prices from trading session settlements page ‚Äî futures_get","text":"first_date First date (\"YYYY-MM-DD\") yc_mget multiple curves last_date Last date (\"YYYY-MM-DD\") yc_mget multiple curves Number days fetched dates (default = 1) yc_mget cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE) futures_get returns future contracts given date futures_mget returns future contracts multiple dates given range. refdate Specific date (\"YYYY-MM-DD\") yc_get single curve","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get futures prices from trading session settlements page ‚Äî futures_get","text":"data.frame futures prices.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get futures prices from trading session settlements page ‚Äî futures_get","text":"","code":"if (FALSE) { df <- futures_get(\"2022-04-18\", \"2022-04-22\") } if (FALSE) { df_fut <- futures_get(Sys.Date()) head(df_fut) }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get maturity date from maturity code ‚Äî maturity2date","title":"Get maturity date from maturity code ‚Äî maturity2date","text":"Get corresponding maturity date three characters string represent maturity futures contracts.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get maturity date from maturity code ‚Äî maturity2date","text":"","code":"maturity2date(x, expr = \"first day\")"},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get maturity date from maturity code ‚Äî maturity2date","text":"x character vector three letters string represent maturity futures contracts. expr string indicates day use maturity date. See bizdays::getdate details argument.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get maturity date from maturity code ‚Äî maturity2date","text":"Date vector maturity dates","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get maturity date from maturity code ‚Äî maturity2date","text":"","code":"maturity2date(c(\"F22\", \"F23\", \"G23\", \"H23\", \"F45\"), \"first day\") #> [1] \"2022-01-01\" \"2023-01-01\" \"2023-02-01\" \"2023-03-01\" \"2045-01-01\" maturity2date(c(\"F23\", \"K35\"), \"15th day\") #> [1] \"2023-01-15\" \"2035-05-15\""},{"path":"http://wilsonfreitas.github.io/rb3/reference/rb3-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Read files from Brazilian Financial Market ‚Äî rb3-package","title":"Read files from Brazilian Financial Market ‚Äî rb3-package","text":"Read many files used Brazilian Financial Market convert useful formats data structures.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and parses files delivered by B3 ‚Äî read_marketdata","title":"Read and parses files delivered by B3 ‚Äî read_marketdata","text":"B3, previously BMF&Bovespa, used deliver many files diverse set valuable data informations can used study can called marketdata. files informations futures, option, interest rates, currency rates, bonds many subjects.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and parses files delivered by B3 ‚Äî read_marketdata","text":"","code":"read_marketdata(   filename,   template = NULL,   parse_fields = TRUE,   cache_folder = cachedir(),   do_cache = TRUE )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and parses files delivered by B3 ‚Äî read_marketdata","text":"filename string containing path file. template string template name. parse_fields logical indicating fields must parsed. cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE) template default value filename, given file name equals one template filename attribute, matched template used parse file. Otherwise template must provided. function show_templates can used view available templates default filenames.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and parses files delivered by B3 ‚Äî read_marketdata","text":"data.frame list data.frame containing data parsed files.","code":""},{"path":[]},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and parses files delivered by B3 ‚Äî read_marketdata","text":"","code":"if (FALSE) { # Eletro.txt matches the filename of Eletro template path <- \"Eletro.txt\" df <- read_marketdata(path) path <- \"Indic.txt\" df <- read_marketdata(path, template = \"Indic\") path <- \"PUWEB.TXT\" df <- read_marketdata(path, template = \"PUWEB\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"Show templates. ‚Äî show_templates","title":"Show templates. ‚Äî show_templates","text":"display_template opens RStudio gadget addin allows users view available templates.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show templates. ‚Äî show_templates","text":"","code":"show_templates()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show templates. ‚Äî show_templates","text":"Addin return","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show templates. ‚Äî show_templates","text":"","code":"if (FALSE) { show_templates() }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches Yield Curve Data from B3 ‚Äî yc_get","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"Downloads yield curve data B3 website https://www2.bmf.com.br/pages/portal/bmfbovespa/lumis/lum-taxas-referenciais-bmf-ptBR.asp. Particularly, import data DI X Pre. See https://www.b3.com.br/data/files/8B/F5/11/68/5391F61043E561F6AC094EA8/Manual_de_Curvas.pdf details.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"","code":"yc_mget(   first_date = Sys.Date() - 5,   last_date = Sys.Date(),   by = 1,   cache_folder = cachedir(),   do_cache = TRUE )  yc_get(refdate = Sys.Date(), cache_folder = cachedir(), do_cache = TRUE)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"first_date First date (\"YYYY-MM-DD\") yc_mget multiple curves last_date Last date (\"YYYY-MM-DD\") yc_mget multiple curves Number days fetched dates (default = 1) yc_mget cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE) yc_get returns yield curve given date yc_mget returns multiple yield curves given range dates. refdate Specific date (\"YYYY-MM-DD\") yc_get single curve","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"dataframe/tibble yield curve data","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"","code":"if (FALSE) { df_yc <- yc_mget(first_date = Sys.Date() - 5, last_date = Sys.Date()) head(df_yc) } if (FALSE) { df_yc <- yc_get(Sys.Date()) head(df_yc) }"},{"path":"http://wilsonfreitas.github.io/rb3/news/index.html","id":"rb3-003","dir":"Changelog","previous_headings":"","what":"rb3 0.0.3","title":"rb3 0.0.3","text":"fixed tests yc_get() updated bizdays version 0.1.10 (use load_builtin_calendars - Issue #31)","code":""},{"path":"http://wilsonfreitas.github.io/rb3/news/index.html","id":"rb3-002","dir":"Changelog","previous_headings":"","what":"rb3 0.0.2","title":"rb3 0.0.2","text":"CRAN release: 2022-05-10 changes ropensci process, replaced sapply purrr::map_xxx. improved class Filename, added new methods. added argument destdir = NULL convert_to function. created functions yc_get / yc_mget futures_get / futures_mget (Issue #26). improved fields creation (Issue #27). added downloader/reader GetStockIndex, JSON file relations stocks indexes.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/news/index.html","id":"rb3-001","dir":"Changelog","previous_headings":"","what":"rb3 0.0.1","title":"rb3 0.0.1","text":"CRAN release: 2022-05-05 first release","code":""}]
