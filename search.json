[{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":null,"dir":"","previous_headings":"","what":"Contributing to rb3","title":"Contributing to rb3","text":"First, thanks interest package apraisal contributing codebase rb3. academic, R projects official funding. always nice community helping maintaing code. main links contributing:","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to rb3","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to rb3","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"share-the-love-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Share the love ‚ù§Ô∏è","title":"Contributing to rb3","text":"Think our_package useful? Let others discover , telling person, via Twitter blog post. Using our_package paper writing? Consider citing .","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"report-a-bug-","dir":"","previous_headings":"How you can contribute","what":"Report a bug üêõ","title":"Contributing to rb3","text":"‚Äôve found bug using package, please report creating issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"improve-the-documentation-","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation üìñ","title":"Contributing to rb3","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"the-website","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"The website","title":"Contributing to rb3","text":"website generated pkgdown. means don‚Äôt write html: content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation. , report issue can point right direction.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"Function documentation","title":"Contributing to rb3","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"contribute-code-","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to rb3","text":"Care fix bugs implement new functionality our_package? Awesome! üëè look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"http://wilsonfreitas.github.io/rb3/Contributing.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to rb3","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream master. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). Check code devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rb3 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"historical-nominal-interest-rates","dir":"Articles","previous_headings":"","what":"Historical nominal interest rates","title":"How to Compute Historical Rates from B3 Future Prices","text":"interest rates can extracted futures prices. DI1 futures matures first day month. code generates maturities three characters maturity codes. business days implied rates calculated fixedincome::rates function, know notional amount contracts 100000. graphic can see dynamics nominal interest rates contracts DI1F23 DI1F33. contracts exactly 10 years distant .","code":"di1_futures <- df |>     filter(commodity == \"DI1\") |>     mutate(         maturity_date = maturity2date(maturity_code),         fixing = following(maturity_date, \"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\"),         adjusted_tax = implied_rate(\"discrete\", business_days / 252, 100000 / price)     ) |>     filter(business_days > 0)  di1_futures |>     filter(symbol %in% c(\"DI1F23\", \"DI1F33\")) |>     ggplot(aes(x = refdate, y = adjusted_tax, color = symbol, group = symbol)) +     geom_line() +     geom_point() +     labs(         title = \"DI1 Future Rates - Nominal Interest Rates\",         caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),         x = \"Date\",         y = \"Interest Rates\",         color = \"Symbol\"     ) +     scale_y_continuous(labels = scales::percent)"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"historical-real-interest-rates","dir":"Articles","previous_headings":"","what":"Historical real interest rates","title":"How to Compute Historical Rates from B3 Future Prices","text":"Differently DI1 contracts, trade nominal interest rates, DAP contracts trade real interest rates.","code":"dap_futures <- df |>     filter(commodity == \"DAP\") |>     mutate(         maturity_date = maturity2date(maturity_code, \"15th day\"),         fixing = following(maturity_date, \"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\"),         adjusted_tax = implied_rate(\"discrete\", business_days / 252, 100000 / price)     ) |>     filter(business_days > 0)  dap_futures |>     filter(symbol %in% c(\"DAPF23\", \"DAPK35\")) |>     ggplot(aes(x = refdate, y = adjusted_tax, group = symbol, color = symbol)) +     geom_line() +     geom_point() +     labs(         title = \"DAP Future Rates - Real Interest Rates\",         caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),         x = \"Date\",         y = \"Interest Rates\",         color = \"Symbol\"     ) +     scale_y_continuous(labels = scales::percent)"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"implied-inflation","dir":"Articles","previous_headings":"","what":"Implied inflation","title":"How to Compute Historical Rates from B3 Future Prices","text":"difference real nominal interest rates can obtain forward inflation implied contracts. Using contracts DI1F23 DAPF23, matures month, difference days. implied inflation can computed division prices contracts.","code":"infl_futures <- df |>     filter(symbol %in% c(\"DI1F23\", \"DAPF23\")) |>     mutate(         maturity_date = if_else(commodity == \"DI1\",             maturity2date(maturity_code),             maturity2date(maturity_code, \"15th day\")         ),         fixing = following(maturity_date, \"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\"),         adjusted_tax = implied_rate(\"discrete\", business_days / 252, 100000 / price)     ) |>     arrange(refdate)  infl_expec <- infl_futures |>     select(symbol, price, refdate) |>     tidyr::pivot_wider(names_from = symbol, values_from = price) |>     mutate(inflation = DAPF23 / DI1F23 - 1)  infl_expec |>     ggplot(aes(x = refdate, y = inflation)) +     geom_line() +     geom_point()"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-future-rates.html","id":"forward-rates","dir":"Articles","previous_headings":"","what":"Forward rates","title":"How to Compute Historical Rates from B3 Future Prices","text":"10Y Forward rates implied DI1 Futures prices. contracts DI1F23 DI1F33 used compute 10Y forward rates ranges Jan.¬†2023 Jan.¬†2033.","code":"df_fut <- df |>     filter(symbol %in% c(\"DI1F23\", \"DI1F33\")) |>     mutate(         maturity_date = maturity2date(maturity_code) |> following(\"Brazil/ANBIMA\"),         business_days = bizdays(refdate, maturity_date, \"Brazil/ANBIMA\")     )  df_du <- df_fut |>     select(refdate, symbol, business_days) |>     tidyr::pivot_wider(names_from = symbol, values_from = business_days) |>     mutate(         du = DI1F33 - DI1F23     ) |>     select(refdate, du)  df_fwd <- df_fut |>     select(refdate, symbol, price) |>     tidyr::pivot_wider(names_from = symbol, values_from = price) |>     inner_join(df_du, by = \"refdate\") |>     mutate(         fwd = (DI1F23 / DI1F33)^(252 / du) - 1     ) |>     select(refdate, fwd) |>     na.omit() df_fwd |>     ggplot(aes(x = refdate, y = fwd)) +     geom_line() +     labs(         x = \"Date\", y = \"Forward Rates\",         title = \"Historical 10Y Forward Rates - F23:F33\",         caption = \"Source B3 - package rb3\"     )"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-yield-curve.html","id":"di-x-pre-curve","dir":"Articles","previous_headings":"","what":"DI X Pre Curve","title":"Fetching Historical Yield Curves from B3","text":"","code":"df_yc <- yc_mget(   first_date = Sys.Date() - 255 * 5,   last_date = Sys.Date(),   by = 255 ) #> ‚†ô Fetching data points3/4 | ‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†           75% | ETA:  1s  p <- ggplot(   df_yc,   aes(     x = forward_date,     y = r_252,     group = refdate,     color = factor(refdate)   ) ) +   geom_line(size = 1) +   labs(     title = \"Yield Curves for Brazil\",     subtitle = \"Built using interest rates future contracts\",     caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),     x = \"Forward Date\",     y = \"Annual Interest Rate\",     color = \"Reference Date\"   ) +   theme_light() +   scale_y_continuous(labels = scales::percent)  print(p)"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-yield-curve.html","id":"di-x-ipca-curve","dir":"Articles","previous_headings":"","what":"DI x IPCA Curve","title":"Fetching Historical Yield Curves from B3","text":"","code":"df_yc <- yc_ipca_mget(   first_date = Sys.Date() - 255 * 5,   last_date = Sys.Date(),   by = 255 )  p <- ggplot(   df_yc |> filter(biz_days > 21, biz_days < 1008),   aes(     x = forward_date,     y = r_252,     group = refdate,     color = factor(refdate)   ) ) +   geom_line(size = 1) +   labs(     title = \"DIxIPCA Yield Curves for Brazil\",     subtitle = \"Built using interest rates future contracts\",     caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),     x = \"Forward Date\",     y = \"Annual Interest Rate\",     color = \"Reference Date\"   ) +   theme_light() +   scale_y_continuous(labels = scales::percent)  print(p)"},{"path":"http://wilsonfreitas.github.io/rb3/articles/Fetching-historical-yield-curve.html","id":"cupom-limpo-usd","dir":"Articles","previous_headings":"","what":"Cupom Limpo (USD)","title":"Fetching Historical Yield Curves from B3","text":"","code":"df_yc <- yc_usd_mget(   first_date = Sys.Date() - 255 * 5,   last_date = Sys.Date(),   by = 255 )  p <- ggplot(   df_yc |> filter(biz_days > 21, biz_days < 2520),   aes(     x = forward_date,     y = r_360,     group = refdate,     color = factor(refdate)   ) ) +   geom_line(size = 1) +   labs(     title = \"Cupom Limpo (USD) Yield Curves for Brazil\",     subtitle = \"Built using interest rates future contracts\",     caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),     x = \"Forward Date\",     y = \"Annual Interest Rate\",     color = \"Reference Date\"   ) +   theme_light() +   scale_y_continuous(labels = scales::percent)  print(p)"},{"path":"http://wilsonfreitas.github.io/rb3/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wilson Freitas. Author, maintainer. Marcelo Perlin. Author.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Download parse public files released B3 convert theminto useful formats data structures common data analysis practitioners.","code":"@Manual{,   title = {Download and Parse Public Data Released by B3 Exchange},   author = {Wilson Freitas and Marcelo Perlin},   note = {R package version 0.0.1},   year = {2022},   url = {https://github.com/wilsonfreitas/rb3}, }"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"rb3","dir":"","previous_headings":"","what":"Download and Parse Public Data Released by B3 Exchange","title":"Download and Parse Public Data Released by B3 Exchange","text":"B3 main financial exchange Brazil, offering support access trading systems equity fixed income markets. website can find vast number datasets regarding prices transactions contracts available trading markets, including: equities (unadjusted corporate events) futures FII (Reits) options BDRs historical yield curves (calculated futures contracts) B3 indexes composition Package rb3 facilitates downloading reading datasets B3, making easy consume R structured way. datasets can used industry academic studies.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Download and Parse Public Data Released by B3 Exchange","text":"documentation available pkgdown page, articles (vignettes) real applications can found.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download and Parse Public Data Released by B3 Exchange","text":"","code":"install.packages(\"rb3\") # github (Development branch) if (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"wilsonfreitas/rb3\")"},{"path":[]},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"yield-curve","dir":"","previous_headings":"Examples","what":"Yield curve","title":"Download and Parse Public Data Released by B3 Exchange","text":"Download use historical yield curve data yc_get.","code":"library(rb3) library(ggplot2) library(stringr)  df_yc <- yc_mget(   first_date = Sys.Date() - 255 * 5,   last_date = Sys.Date(),   by = 255 )  p <- ggplot(   df_yc,   aes(     x = forward_date,     y = r_252,     group = refdate,     color = factor(refdate)   ) ) +   geom_line() +   labs(     title = \"Yield Curves for Brazil\",     subtitle = \"Built using interest rates future contracts\",     caption = str_glue(\"Data imported using rb3 at {Sys.Date()}\"),     x = \"Forward Date\",     y = \"Annual Interest Rate\",     color = \"Reference Date\"   ) +   theme_light() +   scale_y_continuous(labels = scales::percent)  print(p)"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"futures-prices","dir":"","previous_headings":"Examples","what":"Futures prices","title":"Download and Parse Public Data Released by B3 Exchange","text":"Get settlement future prices futures_get.","code":"library(rb3) library(dplyr)  df <- futures_mget(   first_date = \"2022-04-01\",   last_date = \"2022-04-29\",   by = 5 )  glimpse(   df |>     filter(commodity == \"DI1\") ) #> Rows: 153 #> Columns: 8 #> $ refdate          <date> 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022-04-01, 2022-04~ #> $ commodity        <chr> \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\", \"DI1\"~ #> $ maturity_code    <chr> \"J22\", \"K22\", \"M22\", \"N22\", \"Q22\", \"U22\", \"V22\", \"X22\", \"Z22\", \"F23\", \"G23\", \"H23\", \"J23\", \"N23\", \"V23\", \"F24\", \"J24\", \"N24\", \"V24\", \"F25\", \"J25\", \"N25\"~ #> $ symbol           <chr> \"DI1J22\", \"DI1K22\", \"DI1M22\", \"DI1N22\", \"DI1Q22\", \"DI1U22\", \"DI1V22\", \"DI1X22\", \"DI1Z22\", \"DI1F23\", \"DI1G23\", \"DI1H23\", \"DI1J23\", \"DI1N23\", \"DI1V23\", \"D~ #> $ price_previous   <dbl> 99999.99, 99172.50, 98159.27, 97181.87, 96199.14, 95137.64, 94174.49, 93265.23, 92365.48, 91404.64, 90434.90, 89662.14, 88719.94, 86306.50, 84065.98, 82~ #> $ price            <dbl> 100000.00, 99172.31, 98160.23, 97185.43, 96210.42, 95159.25, 94209.42, 93314.08, 92422.80, 91472.04, 90513.73, 89751.01, 88821.78, 86457.18, 84241.81, 8~ #> $ change           <dbl> 0.01, -0.19, 0.96, 3.56, 11.28, 21.61, 34.93, 48.85, 57.32, 67.40, 78.83, 88.87, 101.84, 150.68, 175.83, 275.55, 370.18, 423.00, 452.44, 477.65, 497.68,~ #> $ settlement_value <dbl> 0.01, 0.19, 0.96, 3.56, 11.28, 21.61, 34.93, 48.85, 57.32, 67.40, 78.83, 88.87, 101.84, 150.68, 175.83, 275.55, 370.18, 423.00, 452.44, 477.65, 497.68, ~"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"equity-data","dir":"","previous_headings":"Examples","what":"Equity data","title":"Download and Parse Public Data Released by B3 Exchange","text":"Equity closing data (without price adjustments) available thru cotahist_get. Funds data FIIs data BDRs data Equity options","code":"library(rb3) library(bizdays)  # fix for ssl error (only in linux) if (Sys.info()[\"sysname\"] == \"Linux\") {   httr::set_config(     httr::config(ssl_verifypeer = FALSE)   ) }  date <- preceding(Sys.Date() - 1, \"Brazil/ANBIMA\") # last business day ch <- cotahist_get(date, \"daily\")  glimpse(   cotahist_equity_get(ch) ) #> Rows: 381 #> Columns: 13 #> $ refdate               <date> 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 20~ #> $ symbol                <chr> \"AALR3\", \"ABCB4\", \"ABEV3\", \"AERI3\", \"AESB3\", \"AFLT3\", \"AGRO3\", \"AGXY3\", \"ALLD3\", \"ALPA3\", \"ALPA4\", \"ALPK3\", \"ALSO3\", \"ALUP3\", \"ALUP4\", \"ALUP11\", \"A~ #> $ open                  <dbl> 19.77, 16.81, 14.72, 3.89, 10.81, 9.16, 31.62, 9.94, 12.25, 18.35, 21.29, 3.83, 20.11, 8.82, 8.82, 26.40, 2.40, 30.30, 22.94, 5.71, 34.83, 12.98, 8~ #> $ high                  <dbl> 20.06, 16.93, 14.82, 3.95, 10.89, 9.16, 31.99, 10.30, 12.43, 18.60, 21.63, 3.83, 20.21, 8.92, 8.88, 26.60, 2.48, 31.78, 23.50, 5.76, 36.00, 13.15, ~ #> $ low                   <dbl> 19.74, 16.41, 14.18, 3.76, 10.66, 9.16, 30.45, 9.94, 11.66, 17.90, 20.74, 3.67, 19.16, 8.73, 8.76, 26.22, 2.31, 30.06, 22.56, 5.45, 33.79, 12.72, 8~ #> $ close                 <dbl> 20.06, 16.61, 14.22, 3.78, 10.68, 9.16, 30.62, 9.98, 11.81, 17.91, 20.94, 3.67, 19.35, 8.88, 8.76, 26.40, 2.35, 31.19, 22.95, 5.54, 35.33, 13.00, 8~ #> $ average               <dbl> 19.89, 16.59, 14.42, 3.82, 10.74, 9.16, 30.99, 10.07, 11.89, 18.19, 21.04, 3.78, 19.45, 8.83, 8.80, 26.41, 2.38, 31.04, 22.97, 5.57, 35.67, 12.95, ~ #> $ best_bid              <dbl> 20.05, 16.60, 14.22, 3.77, 10.68, 9.06, 30.62, 9.98, 11.81, 17.90, 20.91, 3.66, 19.35, 8.87, 8.75, 26.34, 2.35, 31.04, 22.92, 5.53, 34.00, 12.98, 8~ #> $ best_ask              <dbl> 20.09, 16.61, 14.23, 3.78, 10.71, 9.46, 30.70, 10.00, 11.98, 20.00, 20.95, 3.82, 19.40, 8.88, 8.80, 26.40, 2.36, 31.19, 22.95, 5.54, 35.98, 13.03, ~ #> $ volume                <dbl> 10070975, 11310732, 425796280, 7981542, 9264003, 6412, 17228579, 502600, 1295768, 136426, 80283647, 212998, 44464947, 76829, 61642, 41557139, 14061~ #> $ traded_contracts      <int> 506100, 681700, 29516600, 2087900, 862300, 700, 555900, 49900, 108900, 7500, 3814800, 56300, 2286000, 8700, 7000, 1573300, 5884000, 1319900, 102964~ #> $ transactions_quantity <int> 2069, 4754, 50558, 4973, 3369, 3, 2778, 312, 623, 25, 19031, 149, 9519, 64, 45, 6068, 4665, 6909, 21590, 3080, 1180, 3316, 5567, 13942, 111, 5901, ~ #> $ distribution_id       <int> 102, 140, 125, 101, 102, 119, 112, 101, 103, 231, 231, 101, 102, 113, 113, 113, 113, 102, 101, 107, 105, 103, 142, 104, 105, 101, 101, 119, 119, 10~ glimpse(   cotahist_etfs_get(ch) ) #> Rows: 81 #> Columns: 13 #> $ refdate               <date> 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 20~ #> $ symbol                <chr> \"5GTK11\", \"ACWI11\", \"ALUG11\", \"ASIA11\", \"BBOV11\", \"BBSD11\", \"BDIV11\", \"BITH11\", \"BOVA11\", \"BOVB11\", \"BOVS11\", \"BOVV11\", \"BOVX11\", \"BRAX11\", \"BRZP11~ #> $ open                  <dbl> 80.00, 9.11, 37.50, 7.30, 56.40, 91.65, 92.00, 35.60, 104.78, 108.49, 83.27, 109.48, 10.89, 90.51, 65.57, 53.80, 11.08, 8.84, 25.19, 71.25, 33.00, ~ #> $ high                  <dbl> 80.00, 9.11, 37.50, 7.37, 56.40, 91.65, 92.90, 36.50, 104.78, 108.49, 83.27, 109.48, 10.89, 90.51, 66.67, 53.80, 11.08, 8.84, 25.39, 71.75, 33.05, ~ #> $ low                   <dbl> 77.10, 8.86, 36.85, 7.22, 54.45, 89.60, 91.96, 34.18, 102.15, 106.54, 81.54, 106.81, 10.61, 89.21, 65.15, 53.80, 10.75, 8.39, 23.00, 70.25, 31.96, ~ #> $ close                 <dbl> 78.25, 8.90, 36.95, 7.27, 54.45, 89.60, 92.55, 35.40, 102.21, 106.70, 81.71, 106.86, 10.63, 89.30, 65.16, 53.80, 10.77, 8.50, 23.20, 70.25, 32.30, ~ #> $ average               <dbl> 78.85, 8.90, 37.15, 7.26, 54.45, 89.85, 92.20, 34.91, 102.94, 106.78, 82.18, 108.19, 10.66, 89.89, 65.35, 53.80, 10.79, 8.66, 23.48, 70.94, 32.49, ~ #> $ best_bid              <dbl> 77.11, 8.85, 36.85, 7.22, 54.15, 89.50, 92.00, 35.00, 102.21, 106.70, 81.71, 106.86, 10.63, 89.30, 65.16, 0.00, 10.76, 8.30, 23.06, 70.25, 32.30, 8~ #> $ best_ask              <dbl> 78.25, 8.90, 36.95, 7.28, 55.57, 91.25, 92.88, 35.40, 102.26, 108.49, 0.00, 107.64, 11.08, 90.50, 65.77, 53.80, 11.00, 8.50, 24.50, 71.09, 38.00, 1~ #> $ volume                <dbl> 4.770952e+04, 3.425857e+06, 1.001285e+05, 1.671910e+06, 2.237427e+07, 3.037244e+04, 7.305553e+05, 8.654818e+05, 1.053651e+09, 1.836637e+06, 4.15840~ #> $ traded_contracts      <int> 605, 384777, 2695, 230241, 410880, 338, 7923, 24791, 10235510, 17200, 506, 2480688, 389143, 966, 4926, 1, 10161, 8548, 6455, 29741, 1167, 6, 108, 6~ #> $ transactions_quantity <int> 8, 463, 64, 57, 40, 21, 712, 908, 71821, 65, 140, 39872, 568, 16, 1244, 1, 42, 105, 130, 1562, 10, 2, 2, 18, 31, 8, 6, 7, 16, 3392, 159, 51, 26, 9,~ #> $ distribution_id       <int> 100, 100, 100, 100, 100, 100, 107, 100, 106, 100, 100, 100, 100, 100, 127, 100, 100, 100, 100, 100, 100, 100, 100, 100, 102, 100, 100, 100, 100, 10~ glimpse(   cotahist_fiis_get(ch) ) #> Rows: 263 #> Columns: 13 #> $ refdate               <date> 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 20~ #> $ symbol                <chr> \"BZLI11\", \"ABCP11\", \"AFHI11\", \"AFOF11\", \"AIEC11\", \"ALMI11\", \"ALZR11\", \"APTO11\", \"ARCT11\", \"ARRI11\", \"ATSA11\", \"BARI11\", \"BBFI11B\", \"BBFO11\", \"BBPO1~ #> $ open                  <dbl> 16.00, 72.75, 98.37, 89.10, 79.78, 950.00, 116.38, 10.19, 105.17, 94.28, 90.20, 99.79, 1967.00, 73.40, 81.50, 98.00, 64.89, 81.95, 106.70, 98.98, 9~ #> $ high                  <dbl> 16.90, 72.77, 99.31, 91.49, 79.78, 950.00, 116.40, 10.19, 105.17, 95.05, 90.20, 99.99, 1967.00, 73.40, 81.80, 98.00, 65.00, 82.99, 107.34, 98.98, 9~ #> $ low                   <dbl> 16.00, 72.26, 98.08, 88.51, 78.83, 938.60, 115.99, 9.80, 104.72, 94.00, 90.20, 98.23, 1927.01, 71.50, 81.50, 97.00, 64.40, 80.81, 106.55, 98.00, 9.~ #> $ close                 <dbl> 16.90, 72.76, 99.01, 88.95, 79.64, 950.00, 116.35, 9.99, 105.14, 94.03, 90.20, 99.00, 1939.95, 71.50, 81.76, 97.67, 64.91, 81.13, 107.00, 98.00, 9.~ #> $ average               <dbl> 16.67, 72.67, 98.49, 89.55, 79.39, 947.15, 116.25, 9.92, 105.01, 94.31, 90.20, 99.21, 1941.05, 72.49, 81.67, 97.68, 64.81, 81.59, 106.79, 98.65, 9.~ #> $ best_bid              <dbl> 16.90, 72.68, 98.69, 88.95, 79.60, 938.60, 116.34, 9.99, 105.13, 94.06, 88.01, 98.98, 1937.77, 71.23, 81.51, 97.31, 64.91, 81.13, 107.00, 85.01, 9.~ #> $ best_ask              <dbl> 17.17, 72.76, 99.01, 89.00, 79.64, 954.00, 116.35, 10.11, 105.14, 94.46, 89.12, 99.00, 1939.95, 71.50, 81.76, 97.67, 64.92, 81.22, 107.25, 98.00, 9~ #> $ volume                <dbl> 66.70, 47457.74, 763930.66, 245015.64, 411115.49, 7577.20, 771576.07, 14696.45, 2275005.35, 258529.97, 90.20, 1249031.26, 296981.79, 146510.85, 100~ #> $ traded_contracts      <int> 4, 653, 7756, 2736, 5178, 8, 6637, 1481, 21664, 2741, 1, 12589, 153, 2021, 12276, 580, 29721, 8715, 8294, 3, 9484, 3, 155, 13163, 56974, 56, 1434, ~ #> $ transactions_quantity <int> 2, 113, 882, 274, 702, 8, 1034, 116, 2654, 200, 1, 1667, 56, 122, 803, 64, 5372, 1349, 806, 2, 495, 3, 14, 1446, 2417, 7, 23, 55, 1325, 13, 6146, 2~ #> $ distribution_id       <int> 100, 314, 114, 114, 120, 250, 154, 105, 127, 131, 136, 137, 302, 116, 214, 228, 252, 185, 190, 129, 106, 123, 115, 120, 116, 102, 225, 216, 211, 11~ glimpse(   cotahist_bdrs_get(ch) ) #> Rows: 504 #> Columns: 13 #> $ refdate               <date> 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 20~ #> $ symbol                <chr> \"A1AP34\", \"A1BB34\", \"A1CR34\", \"A1DI34\", \"A1DM34\", \"A1EE34\", \"A1EN34\", \"A1EP34\", \"A1KA34\", \"A1LG34\", \"A1LL34\", \"A1LN34\", \"A1MB34\", \"A1MD34\", \"A1MP34~ #> $ open                  <dbl> 60.47, 36.09, 65.42, 409.20, 428.56, 232.99, 299.40, 250.50, 40.29, 338.30, 61.75, 32.09, 381.37, 499.99, 322.60, 571.52, 50.21, 126.30, 200.97, 29~ #> $ high                  <dbl> 60.47, 36.09, 65.52, 410.80, 428.56, 233.54, 301.38, 252.50, 40.29, 338.30, 61.75, 32.09, 381.37, 515.00, 322.60, 581.09, 50.21, 126.30, 200.97, 29~ #> $ low                   <dbl> 60.47, 36.09, 63.63, 399.59, 426.34, 231.14, 295.49, 249.00, 40.11, 338.30, 60.90, 32.09, 381.37, 478.42, 322.60, 554.38, 50.21, 126.30, 198.24, 29~ #> $ close                 <dbl> 60.47, 36.09, 63.63, 400.40, 426.34, 231.42, 295.49, 250.49, 40.11, 338.30, 60.90, 32.09, 381.37, 479.57, 322.60, 554.40, 50.21, 126.30, 199.92, 29~ #> $ average               <dbl> 60.47, 36.09, 64.47, 404.83, 427.46, 232.21, 298.17, 251.23, 40.20, 338.30, 61.20, 32.09, 381.37, 483.72, 322.60, 561.21, 50.21, 126.30, 199.53, 29~ #> $ best_bid              <dbl> 0.00, 0.00, 54.00, 0.00, 400.00, 0.00, 0.00, 0.00, 34.75, 312.00, 60.29, 0.00, 0.00, 449.99, 0.00, 534.37, 0.00, 0.00, 0.00, 275.80, 195.02, 28.50,~ #> $ best_ask              <dbl> 0.00, 38.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 925.00, 64.01, 42.48, 0.00, 479.56, 0.00, 0.00, 52.08, 200.00, 0.00, 0.00, 250.00, 49.05, 0.~ #> $ volume                <dbl> 60.47, 72.18, 20762.45, 42507.94, 255198.22, 16255.32, 16399.72, 55523.72, 160.80, 4736.20, 2080.80, 641.80, 381.37, 920537.51, 6452.00, 175097.52,~ #> $ traded_contracts      <int> 1, 2, 322, 105, 597, 70, 55, 221, 4, 14, 34, 20, 1, 1903, 20, 312, 1, 34, 6, 578, 29, 15, 58, 86, 5, 306, 560, 13723, 112, 1, 1, 5, 673, 369974, 12~ #> $ transactions_quantity <int> 1, 1, 206, 101, 9, 70, 55, 70, 2, 2, 4, 1, 1, 189, 1, 104, 1, 1, 6, 151, 5, 1, 58, 4, 1, 224, 217, 28, 1, 1, 1, 2, 6, 3550, 105, 132, 3, 101, 206, ~ #> $ distribution_id       <int> 110, 102, 106, 109, 110, 109, 110, 110, 101, 100, 111, 100, 110, 100, 110, 109, 103, 101, 110, 109, 109, 100, 109, 103, 100, 109, 103, 100, 101, 10~ glimpse(   cotahist_equity_options_get(ch) ) #> Rows: 6,711 #> Columns: 14 #> $ refdate               <date> 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 20~ #> $ symbol                <chr> \"ABCBE175\", \"ABCBQ160\", \"ABEVB15\", \"ABEVD30\", \"ABEVE121\", \"ABEVE125\", \"ABEVE127\", \"ABEVE130\", \"ABEVE132\", \"ABEVE135\", \"ABEVE137\", \"ABEVE140\", \"ABEV~ #> $ type                  <fct> Call, Put, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call, Call~ #> $ strike                <dbl> 17.23, 15.73, 14.47, 29.47, 11.04, 12.54, 12.79, 13.04, 13.29, 13.54, 13.79, 14.04, 14.29, 14.54, 14.79, 15.04, 15.29, 15.54, 15.79, 16.04, 16.29, ~ #> $ maturity_date         <date> 2022-05-20, 2022-05-20, 2023-02-17, 2023-04-20, 2022-05-20, 2022-05-20, 2022-05-20, 2022-05-20, 2022-05-20, 2022-05-20, 2022-05-20, 2022-05-20, 20~ #> $ open                  <dbl> 0.01, 0.14, 2.34, 0.01, 3.19, 2.20, 1.85, 1.52, 1.47, 1.08, 0.83, 0.77, 0.43, 0.40, 0.13, 0.06, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.0~ #> $ high                  <dbl> 0.01, 0.14, 2.34, 0.01, 3.20, 2.20, 1.85, 1.65, 1.47, 1.15, 0.83, 0.77, 0.43, 0.43, 0.15, 0.06, 0.02, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.0~ #> $ low                   <dbl> 0.01, 0.14, 2.34, 0.01, 3.19, 2.20, 1.48, 1.25, 1.00, 0.73, 0.46, 0.27, 0.14, 0.05, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.0~ #> $ close                 <dbl> 0.01, 0.14, 2.34, 0.01, 3.20, 2.20, 1.51, 1.25, 1.00, 0.73, 0.46, 0.28, 0.15, 0.06, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.0~ #> $ average               <dbl> 0.01, 0.14, 2.34, 0.01, 3.19, 2.20, 1.51, 1.46, 1.11, 0.95, 0.68, 0.51, 0.24, 0.14, 0.04, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.0~ #> $ volume                <dbl> 1, 14, 234, 3, 959, 1100, 83275, 139792, 145053, 213675, 24886, 38081, 102317, 134668, 42983, 20926, 7175, 370, 227, 574, 11, 42, 5, 1000, 52, 2240~ #> $ traded_contracts      <int> 100, 100, 100, 300, 300, 500, 55000, 95300, 130400, 223700, 36300, 74100, 413700, 935300, 1006500, 730300, 565800, 36900, 22700, 57400, 1100, 4200,~ #> $ transactions_quantity <int> 1, 1, 1, 1, 2, 1, 11, 23, 10, 265, 19, 69, 79, 194, 116, 238, 77, 35, 110, 15, 11, 42, 3, 13, 52, 1, 4, 16, 1, 25, 12, 159, 29, 300, 65, 202, 227, ~ #> $ distribution_id       <int> 139, 139, 124, 124, 122, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 124, 12~"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"indexes-composition","dir":"","previous_headings":"Examples","what":"Indexes composition","title":"Download and Parse Public Data Released by B3 Exchange","text":"list available B3 indexes can obtained indexes_get. composition specific index index_comp_get. index composition can use COTAHIST select quotes.","code":"indexes_get() #>  [1] \"AGFS\" \"BDRX\" \"GPTW\" \"IBOV\" \"IBRA\" \"IBXL\" \"IBXX\" \"ICO2\" \"ICON\" \"IDIV\" \"IEEX\" \"IFIL\" \"IFIX\" \"IFNC\" \"IGCT\" \"IGCX\" \"IGNM\" \"IMAT\" \"IMOB\" \"INDX\" \"ISEE\" \"ITAG\" \"IVBX\" \"MLCX\" \"SMLL\" #> [26] \"UTIL\" (ibov_comp <- index_comp_get(\"IBOV\")) #>  [1] \"ABEV3\"  \"ALPA4\"  \"AMER3\"  \"ASAI3\"  \"AZUL4\"  \"B3SA3\"  \"BBAS3\"  \"BBDC3\"  \"BBDC4\"  \"BBSE3\"  \"BEEF3\"  \"BIDI11\" \"BPAC11\" \"BPAN4\"  \"BRAP4\"  \"BRFS3\"  \"BRKM5\"  \"BRML3\"  \"CASH3\"  #> [20] \"CCRO3\"  \"CIEL3\"  \"CMIG4\"  \"CMIN3\"  \"COGN3\"  \"CPFE3\"  \"CPLE6\"  \"CRFB3\"  \"CSAN3\"  \"CSNA3\"  \"CVCB3\"  \"CYRE3\"  \"DXCO3\"  \"ECOR3\"  \"EGIE3\"  \"ELET3\"  \"ELET6\"  \"EMBR3\"  \"ENBR3\"  #> [39] \"ENEV3\"  \"ENGI11\" \"EQTL3\"  \"EZTC3\"  \"FLRY3\"  \"GGBR4\"  \"GOAU4\"  \"GOLL4\"  \"HAPV3\"  \"HYPE3\"  \"IGTI11\" \"IRBR3\"  \"ITSA4\"  \"ITUB4\"  \"JBSS3\"  \"JHSF3\"  \"KLBN11\" \"LCAM3\"  \"LREN3\"  #> [58] \"LWSA3\"  \"MGLU3\"  \"MRFG3\"  \"MRVE3\"  \"MULT3\"  \"NTCO3\"  \"PCAR3\"  \"PETR3\"  \"PETR4\"  \"PETZ3\"  \"POSI3\"  \"PRIO3\"  \"QUAL3\"  \"RADL3\"  \"RAIL3\"  \"RDOR3\"  \"RENT3\"  \"RRRP3\"  \"SANB11\" #> [77] \"SBSP3\"  \"SLCE3\"  \"SOMA3\"  \"SULA11\" \"SUZB3\"  \"TAEE11\" \"TIMS3\"  \"TOTS3\"  \"UGPA3\"  \"USIM5\"  \"VALE3\"  \"VBBR3\"  \"VIIA3\"  \"VIVT3\"  \"WEGE3\"  \"YDUQ3\" glimpse(   cotahist_get_symbols(ch, ibov_comp) ) #> Rows: 92 #> Columns: 13 #> $ refdate               <date> 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 2022-05-18, 20~ #> $ symbol                <chr> \"ABEV3\", \"ALPA4\", \"AMER3\", \"ASAI3\", \"AZUL4\", \"B3SA3\", \"BBAS3\", \"BBDC3\", \"BBDC4\", \"BBSE3\", \"BEEF3\", \"BIDI11\", \"BPAC11\", \"BPAN4\", \"BRAP4\", \"BRFS3\", \"~ #> $ open                  <dbl> 14.72, 21.29, 22.94, 15.81, 21.79, 11.72, 36.40, 16.26, 19.83, 25.79, 12.46, 15.37, 24.83, 8.59, 26.94, 14.23, 44.09, 9.05, 2.01, 13.10, 3.35, 11.0~ #> $ high                  <dbl> 14.82, 21.63, 23.50, 15.83, 22.20, 11.82, 36.88, 16.37, 19.95, 25.88, 12.46, 15.37, 24.83, 8.71, 27.06, 14.64, 44.09, 9.09, 2.08, 13.19, 3.46, 11.2~ #> $ low                   <dbl> 14.18, 20.74, 22.56, 15.38, 21.06, 11.47, 35.73, 15.93, 19.47, 25.27, 11.94, 14.24, 23.61, 8.46, 26.12, 13.58, 42.00, 8.63, 1.94, 12.81, 3.31, 10.9~ #> $ close                 <dbl> 14.22, 20.94, 22.95, 15.40, 21.23, 11.55, 35.91, 16.01, 19.56, 25.41, 12.19, 14.32, 23.87, 8.50, 26.22, 13.58, 42.59, 8.69, 1.95, 13.02, 3.38, 11.0~ #> $ average               <dbl> 14.42, 21.04, 22.97, 15.52, 21.61, 11.61, 36.20, 16.06, 19.60, 25.54, 12.19, 14.55, 23.94, 8.52, 26.42, 14.02, 42.81, 8.75, 2.00, 12.98, 3.38, 11.1~ #> $ best_bid              <dbl> 14.22, 20.91, 22.92, 15.39, 21.23, 11.52, 35.91, 16.00, 19.56, 25.40, 12.19, 14.31, 23.85, 8.50, 26.20, 13.58, 42.51, 8.69, 1.94, 12.97, 3.38, 11.0~ #> $ best_ask              <dbl> 14.23, 20.95, 22.95, 15.40, 21.25, 11.56, 35.92, 16.01, 19.57, 25.41, 12.20, 14.32, 23.87, 8.51, 26.22, 13.65, 42.60, 8.71, 1.95, 13.02, 3.39, 11.0~ #> $ volume                <dbl> 425796280, 80283647, 236561952, 106264437, 151706028, 531192301, 452153919, 184075368, 893663060, 111365341, 106738532, 280265348, 348285985, 61860~ #> $ traded_contracts      <int> 29516600, 3814800, 10296400, 6842800, 7019100, 45745200, 12487200, 11457500, 45581800, 4359900, 8754000, 19251700, 14547800, 7257400, 3577300, 1184~ #> $ transactions_quantity <int> 50558, 19031, 21590, 13942, 16706, 48810, 34065, 19677, 47357, 15329, 14078, 33793, 28525, 11778, 12391, 22330, 11918, 44802, 11339, 27195, 17874, ~ #> $ distribution_id       <int> 125, 231, 101, 104, 101, 121, 305, 741, 741, 120, 113, 110, 112, 113, 143, 120, 120, 117, 102, 141, 149, 231, 104, 102, 134, 143, 111, 123, 256, 11~"},{"path":"http://wilsonfreitas.github.io/rb3/index.html","id":"template-system","dir":"","previous_headings":"","what":"Template System","title":"Download and Parse Public Data Released by B3 Exchange","text":"One important part rb3 infrastructure Template System. datasets handled rb3 package configured template, YAML file. template brings many information regarding datasets, like description metadata describes columns, types parsed. template fully describes dataset. template implemented can fetch read downloaded data directly functions download_marketdata read_marketdata. examples, let‚Äôs use template FPR download read data regarding primitive risk factor used B3 risk engine. download_marketdata returns path downloaded file. read_marketdata parses downloaded file according metadata configured template FPR. follows view show_templates adding lists available templates.","code":"f <- download_marketdata(\"FPR\", refdate = as.Date(\"2022-05-10\")) f #> [1] \"C:/Users/wilso/AppData/Local/Temp/RtmpKc4zmX/rb3-cache/FPR-7a2422cc97221426a3b2bd4419215481/FP220510/FatoresPrimitivosRisco.txt\" fpr <- read_marketdata(f, \"FPR\") fpr #> $Header #> # A tibble: 1 x 2 #>   tipo_registro data_geracao_arquivo #>           <int> <date>               #> 1             1 2022-05-10           #>  #> $Data #> # A tibble: 3,204 x 11 #>    tipo_registro id_fpr nome_fpr formato_variacao id_grupo_fpr id_camara_indicador id_instrumento_indicador origem_instrumento  base base_interpolacao criterio_capitalizacao #>            <int>  <int> <chr>    <fct>                   <dbl> <chr>                                  <dbl>              <int> <int>             <int>                  <int> #>  1             2   1422 VLRAPT4  Basis Points                1 BVMF                            200000008810                  8     0                 0                      0 #>  2             2   1423 VLPETR3  Basis Points                1 BVMF                            200000008803                  8     0                 0                      0 #>  3             2   1424 VLSEER3  Basis Points                1 BVMF                            200000008818                  8     0                 0                      0 #>  4             2   1426 VLJBSS3  Basis Points                1 BVMF                            200000008780                  8     0                 0                      0 #>  5             2   1427 VLKLBN11 Basis Points                1 BVMF                            200000008781                  8     0                 0                      0 #>  6             2   1428 VLITUB3  Basis Points                1 BVMF                            200000463163                  8     0                 0                      0 #>  7             2   1429 VLITSA4  Basis Points                1 BVMF                            200000008777                  8     0                 0                      0 #>  8             2   1430 VLHYPE3  Basis Points                1 BVMF                            200000008773                  8     0                 0                      0 #>  9             2   1431 VLGRND3  Basis Points                1 BVMF                            200000008770                  8     0                 0                      0 #> 10             2   1433 VLUGPA3  Basis Points                1 BVMF                            200000008830                  8     0                 0                      0 #> # ... with 3,194 more rows #>  #> attr(,\"class\") #> [1] \"parts\" show_templates()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns rb3 package cache directory ‚Äî cachedir","title":"Returns rb3 package cache directory ‚Äî cachedir","text":"Returns rb3 package cache directory","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns rb3 package cache directory ‚Äî cachedir","text":"","code":"cachedir()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns rb3 package cache directory ‚Äî cachedir","text":"string file path rb3 cache directory","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns rb3 package cache directory ‚Äî cachedir","text":"order set default directory cache, good idea want increase data historically, option rb3.cachedir can set. set, defined directory used default cachedir.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cachedir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns rb3 package cache directory ‚Äî cachedir","text":"","code":"cachedir() #> [1] \"/tmp/RtmpGbOkUF/rb3-cache\""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CDI rate and IDI index value from B3 front page ‚Äî cdi-idi","title":"Get CDI rate and IDI index value from B3 front page ‚Äî cdi-idi","text":"Scrape page https://www.b3.com.br/ get last available CDI rate IDI index values.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CDI rate and IDI index value from B3 front page ‚Äî cdi-idi","text":"","code":"cdi_get()  idi_get()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CDI rate and IDI index value from B3 front page ‚Äî cdi-idi","text":"data.frame CDI rate IDI index values.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cdi-idi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CDI rate and IDI index value from B3 front page ‚Äî cdi-idi","text":"","code":"if (FALSE) { df <- cdi_get() df <- idi_get() }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear cache directory ‚Äî clearcache","title":"Clear cache directory ‚Äî clearcache","text":"Clear cache directory","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear cache directory ‚Äî clearcache","text":"","code":"clearcache()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear cache directory ‚Äî clearcache","text":"return","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/clearcache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear cache directory ‚Äî clearcache","text":"","code":"if (FALSE) { clearcache() }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":null,"dir":"Reference","previous_headings":"","what":"Get month from maturity code ‚Äî code2month","title":"Get month from maturity code ‚Äî code2month","text":"Get corresponding month letters represent maturities futures contracts.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get month from maturity code ‚Äî code2month","text":"","code":"code2month(x)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get month from maturity code ‚Äî code2month","text":"x character letters represent month maturity futures contracts.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get month from maturity code ‚Äî code2month","text":"vector integers","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/code2month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get month from maturity code ‚Äî code2month","text":"","code":"code2month(c(\"F\", \"G\", \"H\", \"J\", \"K\", \"M\", \"N\", \"Q\", \"U\", \"V\", \"X\", \"Z\")) #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12"},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts B3 messy files to structured formats ‚Äî convert_to","title":"Converts B3 messy files to structured formats ‚Äî convert_to","text":"Convert B3 files structured formats based template.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts B3 messy files to structured formats ‚Äî convert_to","text":"","code":"convert_to(   filename,   template = NULL,   parse_fields = TRUE,   format = \"csv\",   destdir = NULL )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts B3 messy files to structured formats ‚Äî convert_to","text":"filename string containing path file. template string template name. parse_fields logical indicating fields must parsed. format output format destdir string destination directory save converted file","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts B3 messy files to structured formats ‚Äî convert_to","text":"string file path generated file.","code":""},{"path":[]},{"path":"http://wilsonfreitas.github.io/rb3/reference/convert_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts B3 messy files to structured formats ‚Äî convert_to","text":"","code":"if (FALSE) { f <- system.file(\"extdata/Indic.txt\", package = \"rb3\") res <- convert_to(f, output_format = \"csv\") res <- convert_to(f, output_format = \"json\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","title":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","text":"Extracts specific data COTAHIST dataset: stocks, funds, BDRs, ETFs, UNITs, options stocks, options indexes, ...","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","text":"","code":"cotahist_equity_get(x)  cotahist_bdrs_get(x)  cotahist_units_get(x)  cotahist_etfs_get(x)  cotahist_fiis_get(x)  cotahist_fidcs_get(x)  cotahist_fiagros_get(x)  cotahist_indexes_get(x)  cotahist_equity_options_get(x)  cotahist_index_options_get(x)  cotahist_funds_options_get(x)  cotahist_get_symbols(x, symbols)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","text":"x COTAHIST dataset returned cotahist_get. symbols list symbols extract market data cotahist","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","text":"data.frame prices, volume, traded quantities informations","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist-extracts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data from COTAHIST dataset ‚Äî cotahist-extracts","text":"","code":"if (FALSE) { df <- cotahist_equity_get(x) } if (FALSE) { df <- cotahist_brds_get(x) } if (FALSE) { df <- cotahist_units_get(x) } if (FALSE) { df <- cotahist_etfs_get(x) } if (FALSE) { df <- cotahist_fiis_get(x) } if (FALSE) { df <- cotahist_fidcs_get(x) } if (FALSE) { df <- cotahist_fiagros_get(x) } if (FALSE) { df <- cotahist_indexes_get(x) } if (FALSE) { df <- cotahist_equity_options_get(x) } if (FALSE) { df <- cotahist_index_options_get(x) } if (FALSE) { df <- cotahist_funds_options_get(x) } if (FALSE) { df <- cotahist_get_symbols(x, c(\"BBDC4\", \"ITSA4\", \"JHSF3\")) }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_equity_options_superset.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts equity option superset of data ‚Äî cotahist_equity_options_superset","title":"Extracts equity option superset of data ‚Äî cotahist_equity_options_superset","text":"Equity options superset dataframe brings together data regarding equities, equity options interest rates. data forms complete set (superset) ready run options models, implied volatility calculations volatility models.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_equity_options_superset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts equity option superset of data ‚Äî cotahist_equity_options_superset","text":"","code":"cotahist_equity_options_superset(ch, yc)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_equity_options_superset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts equity option superset of data ‚Äî cotahist_equity_options_superset","text":"ch cotahist data structure yc yield curve","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_equity_options_superset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts equity option superset of data ‚Äî cotahist_equity_options_superset","text":"dataframe data equities, equity options, interest rates.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_equity_options_superset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts equity option superset of data ‚Äî cotahist_equity_options_superset","text":"","code":"if (FALSE) { refdate <- Sys.Date() - 1 ch <- cotahist_get(refdate, \"daily\") yc <- yc_get(refdate) ch_ss <- cotahist_equity_options_superset(ch, yc) }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get COTAHIST data from B3 ‚Äî cotahist_get","title":"Get COTAHIST data from B3 ‚Äî cotahist_get","text":"Download COTAHIST file parses returning structured data R objects.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get COTAHIST data from B3 ‚Äî cotahist_get","text":"","code":"cotahist_get(   refdate,   type = c(\"yearly\", \"monthly\", \"daily\"),   cache_folder = cachedir(),   do_cache = TRUE )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get COTAHIST data from B3 ‚Äî cotahist_get","text":"refdate reference date used download file. reference date formated year/month/day according given type. Accepts ISO formated date strings. type string yearly data given year, monthly data given month daily given day. cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE) valueable information HistoricalPrices element returned list. Header Trailer informations regarding file generation. HistoricalPrices element data.frame data many assets traded stock exchange: stocks, bdrs, funds, ETFs, equity options, forward contracts equities warrants due corporate events.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get COTAHIST data from B3 ‚Äî cotahist_get","text":"list 3 data.frames: Header, HistoricalPrices, Trailer.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/cotahist_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get COTAHIST data from B3 ‚Äî cotahist_get","text":"","code":"if (FALSE) { # get all data to the year of 2001 df_2001 <- cotahist_get(\"2001-01-01\", \"yearly\") # get data of January of 2001 df_200101 <- cotahist_get(\"2001-01-01\", \"monthly\") # get data of 2001-01-02 df_daily <- cotahist_get(\"2001-01-02\", \"daily\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Display templates ‚Äî display_template","title":"Display templates ‚Äî display_template","text":"display_template opens RStudio gadget addin allows users query specific attributes templates.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display templates ‚Äî display_template","text":"","code":"display_template()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display templates ‚Äî display_template","text":"Addin return","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/display_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display templates ‚Äî display_template","text":"","code":"if (FALSE) { display_template() }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_marketdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download datasets ‚Äî download_marketdata","title":"Download datasets ‚Äî download_marketdata","text":"Download datasets given template.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_marketdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download datasets ‚Äî download_marketdata","text":"","code":"download_marketdata(template, cache_folder = cachedir(), do_cache = TRUE, ...)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_marketdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download datasets ‚Äî download_marketdata","text":"template template name cache_folder Location cache folder (default = cachedir()) do_cache logical indicating existing file (previously downloaded) used replaced. ... aditional arguments","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_marketdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download datasets ‚Äî download_marketdata","text":"string file path downloaded file NULL download fails. function downloads data sets templates specifies downloader attribute. dest provided, cache_folder used file template id saved inside .","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/download_marketdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download datasets ‚Äî download_marketdata","text":"","code":"if (FALSE) { fname <- download_marketdata(\"CDIIDI\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get futures prices from trading session settlements page ‚Äî futures_get","title":"Get futures prices from trading session settlements page ‚Äî futures_get","text":"Scrape page https://www.b3.com.br/en_us/market-data--indices/data-services/market-data/historical-data/derivatives/trading-session-settlements/ get futures prices.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get futures prices from trading session settlements page ‚Äî futures_get","text":"","code":"futures_mget(   first_date = Sys.Date() - 5,   last_date = Sys.Date(),   by = 1,   cache_folder = cachedir(),   do_cache = TRUE )  futures_get(refdate = Sys.Date(), cache_folder = cachedir(), do_cache = TRUE)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get futures prices from trading session settlements page ‚Äî futures_get","text":"first_date First date (\"YYYY-MM-DD\") yc_mget multiple curves last_date Last date (\"YYYY-MM-DD\") yc_mget multiple curves Number days fetched dates (default = 1) yc_mget cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE) futures_get returns future contracts given date futures_mget returns future contracts multiple dates given range. refdate Specific date (\"YYYY-MM-DD\") yc_get single curve","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get futures prices from trading session settlements page ‚Äî futures_get","text":"data.frame futures prices.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/futures_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get futures prices from trading session settlements page ‚Äî futures_get","text":"","code":"if (FALSE) { df <- futures_get(\"2022-04-18\", \"2022-04-22\") } if (FALSE) { df_fut <- futures_get(Sys.Date()) head(df_fut) }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_by_segment_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get B3 indexes available ‚Äî index_by_segment_get","title":"Get B3 indexes available ‚Äî index_by_segment_get","text":"Gets B3 indexes available.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_by_segment_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get B3 indexes available ‚Äî index_by_segment_get","text":"","code":"index_by_segment_get(index_name, cache_folder = cachedir(), do_cache = TRUE)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_by_segment_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get B3 indexes available ‚Äî index_by_segment_get","text":"index_name string index name cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE)","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_by_segment_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get B3 indexes available ‚Äî index_by_segment_get","text":"dataframe index stocks, weights, segments positions.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_by_segment_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get B3 indexes available ‚Äî index_by_segment_get","text":"","code":"if (FALSE) { index_by_segment_get(\"IBOV\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_comp_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get composition of B3 indexes ‚Äî index_comp_get","title":"Get composition of B3 indexes ‚Äî index_comp_get","text":"Gets composition listed B3 indexes.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_comp_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get composition of B3 indexes ‚Äî index_comp_get","text":"","code":"index_comp_get(index_name, cache_folder = cachedir(), do_cache = TRUE)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_comp_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get composition of B3 indexes ‚Äî index_comp_get","text":"index_name string index name cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE)","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_comp_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get composition of B3 indexes ‚Äî index_comp_get","text":"character vector symbols belong given index name","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_comp_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get composition of B3 indexes ‚Äî index_comp_get","text":"","code":"if (FALSE) { index_comp_get(\"IBOV\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_weights_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the assets weights of B3 indexes ‚Äî index_weights_get","title":"Get the assets weights of B3 indexes ‚Äî index_weights_get","text":"Gets assets weights B3 indexes.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_weights_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the assets weights of B3 indexes ‚Äî index_weights_get","text":"","code":"index_weights_get(index_name, cache_folder = cachedir(), do_cache = TRUE)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_weights_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the assets weights of B3 indexes ‚Äî index_weights_get","text":"index_name string index name cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE)","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_weights_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the assets weights of B3 indexes ‚Äî index_weights_get","text":"data.frame symbols belong given index name weights theorical positions.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/index_weights_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the assets weights of B3 indexes ‚Äî index_weights_get","text":"","code":"if (FALSE) { index_weights_get(\"IBOV\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexes_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get B3 indexes available ‚Äî indexes_get","title":"Get B3 indexes available ‚Äî indexes_get","text":"Gets B3 indexes available.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexes_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get B3 indexes available ‚Äî indexes_get","text":"","code":"indexes_get(cache_folder = cachedir(), do_cache = TRUE)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexes_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get B3 indexes available ‚Äî indexes_get","text":"cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE)","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexes_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get B3 indexes available ‚Äî indexes_get","text":"character vector symbols indexes available","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexes_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get B3 indexes available ‚Äî indexes_get","text":"","code":"if (FALSE) { indexes_get() }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexes_last_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the date of indexes composition last update ‚Äî indexes_last_update","title":"Get the date of indexes composition last update ‚Äî indexes_last_update","text":"Gets date indexes updated lastly.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexes_last_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the date of indexes composition last update ‚Äî indexes_last_update","text":"","code":"indexes_last_update(cache_folder = cachedir(), do_cache = TRUE)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexes_last_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the date of indexes composition last update ‚Äî indexes_last_update","text":"cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE)","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexes_last_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the date of indexes composition last update ‚Äî indexes_last_update","text":"Date indexes updated","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexes_last_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the date of indexes composition last update ‚Äî indexes_last_update","text":"","code":"if (FALSE) { indexes_last_update() }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexreport_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches indexes data from B3 ‚Äî indexreport_get","title":"Fetches indexes data from B3 ‚Äî indexreport_get","text":"Downloads index data B3 website https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/historico/boletins-diarios/pesquisa-por-pregao/pesquisa-por-pregao/.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexreport_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches indexes data from B3 ‚Äî indexreport_get","text":"","code":"indexreport_mget(   first_date = Sys.Date() - 5,   last_date = Sys.Date(),   by = 1,   cache_folder = cachedir(),   do_cache = TRUE )  indexreport_get(   refdate = Sys.Date(),   cache_folder = cachedir(),   do_cache = TRUE )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexreport_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetches indexes data from B3 ‚Äî indexreport_get","text":"first_date First date (\"YYYY-MM-DD\") yc_mget multiple curves last_date Last date (\"YYYY-MM-DD\") yc_mget multiple curves Number days fetched dates (default = 1) yc_mget cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE) refdate Specific date (\"YYYY-MM-DD\") yc_get single curve","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexreport_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches indexes data from B3 ‚Äî indexreport_get","text":"dataframe index data (OHLC, average daily oscilation)","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexreport_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetches indexes data from B3 ‚Äî indexreport_get","text":"indexreport_get returns index data given date indexreport_mget returns index data given range dates.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/indexreport_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches indexes data from B3 ‚Äî indexreport_get","text":"","code":"if (FALSE) { df_ir <- indexreport_mget(Sys.Date() - 5, Sys.Date()) head(df_ir) } if (FALSE) { df_ir <- indexreport_get(Sys.Date()) head(df_ir) }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get maturity date from maturity code ‚Äî maturity2date","title":"Get maturity date from maturity code ‚Äî maturity2date","text":"Get corresponding maturity date three characters string represent maturity futures contracts.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get maturity date from maturity code ‚Äî maturity2date","text":"","code":"maturity2date(x, expr = \"first day\")"},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get maturity date from maturity code ‚Äî maturity2date","text":"x character vector three letters string represent maturity futures contracts. expr string indicates day use maturity date. See bizdays::getdate details argument.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get maturity date from maturity code ‚Äî maturity2date","text":"Date vector maturity dates","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/maturity2date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get maturity date from maturity code ‚Äî maturity2date","text":"","code":"maturity2date(c(\"F22\", \"F23\", \"G23\", \"H23\", \"F45\"), \"first day\") #> [1] \"2022-01-01\" \"2023-01-01\" \"2023-02-01\" \"2023-03-01\" \"2045-01-01\" maturity2date(c(\"F23\", \"K35\"), \"15th day\") #> [1] \"2023-01-15\" \"2035-05-15\""},{"path":"http://wilsonfreitas.github.io/rb3/reference/rb3-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Read files from Brazilian Financial Market ‚Äî rb3-package","title":"Read files from Brazilian Financial Market ‚Äî rb3-package","text":"Read many files used Brazilian Financial Market convert useful formats data structures.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and parses files delivered by B3 ‚Äî read_marketdata","title":"Read and parses files delivered by B3 ‚Äî read_marketdata","text":"B3, previously BMF&Bovespa, used deliver many files diverse set valuable data informations can used study can called marketdata. files informations futures, option, interest rates, currency rates, bonds many subjects.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and parses files delivered by B3 ‚Äî read_marketdata","text":"","code":"read_marketdata(   filename,   template = NULL,   parse_fields = TRUE,   do_cache = TRUE )"},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and parses files delivered by B3 ‚Äî read_marketdata","text":"filename string containing path file. template string template name. parse_fields logical indicating fields must parsed. do_cache Whether use cache (default = TRUE) template default value filename, given file name equals one template filename attribute, matched template used parse file. Otherwise template must provided. function show_templates can used view available templates default filenames.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and parses files delivered by B3 ‚Äî read_marketdata","text":"data.frame list data.frame containing data parsed files.","code":""},{"path":[]},{"path":"http://wilsonfreitas.github.io/rb3/reference/read_marketdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and parses files delivered by B3 ‚Äî read_marketdata","text":"","code":"if (FALSE) { # Eletro.txt matches the filename of Eletro template path <- \"Eletro.txt\" df <- read_marketdata(path) path <- \"Indic.txt\" df <- read_marketdata(path, template = \"Indic\") path <- \"PUWEB.TXT\" df <- read_marketdata(path, template = \"PUWEB\") }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"Show templates. ‚Äî show_templates","title":"Show templates. ‚Äî show_templates","text":"display_template opens RStudio gadget addin allows users view available templates.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show templates. ‚Äî show_templates","text":"","code":"show_templates()"},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show templates. ‚Äî show_templates","text":"Addin return","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/show_templates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show templates. ‚Äî show_templates","text":"","code":"if (FALSE) { show_templates() }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetches Yield Curve Data from B3 ‚Äî yc_get","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"Downloads yield curve data B3 website https://www2.bmf.com.br/pages/portal/bmfbovespa/lumis/lum-taxas-referenciais-bmf-ptBR.asp. Particularly, import data DI X Pre (yc_get) Cupom limpo (yc_usd_get) DI x IPCA (yc_ipca_get)  See https://www.b3.com.br/data/files/8B/F5/11/68/5391F61043E561F6AC094EA8/Manual_de_Curvas.pdf details.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"","code":"yc_mget(   first_date = Sys.Date() - 5,   last_date = Sys.Date(),   by = 1,   cache_folder = cachedir(),   do_cache = TRUE )  yc_get(refdate = Sys.Date(), cache_folder = cachedir(), do_cache = TRUE)  yc_ipca_mget(   first_date = Sys.Date() - 5,   last_date = Sys.Date(),   by = 1,   cache_folder = cachedir(),   do_cache = TRUE )  yc_ipca_get(refdate = Sys.Date(), cache_folder = cachedir(), do_cache = TRUE)  yc_usd_mget(   first_date = Sys.Date() - 5,   last_date = Sys.Date(),   by = 1,   cache_folder = cachedir(),   do_cache = TRUE )  yc_usd_get(refdate = Sys.Date(), cache_folder = cachedir(), do_cache = TRUE)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"first_date First date (\"YYYY-MM-DD\") yc_mget multiple curves last_date Last date (\"YYYY-MM-DD\") yc_mget multiple curves Number days fetched dates (default = 1) yc_mget cache_folder Location cache folder (default = cachedir()) do_cache Whether use cache (default = TRUE) refdate Specific date (\"YYYY-MM-DD\") yc_get single curve","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"dataframe/tibble yield curve data","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"yc_get returns yield curve given date yc_mget returns multiple yield curves given range dates. yc_ipca_get returns yield curve real interest rates given date yc_ipca_mget returns multiple yield curves real interest rates given range dates. real interest rates consider IPCA inflation index. yc_usd_get returns yield curve nominal interest rates USD Brazil given date yc_usd_mget returns multiple yield curves nominal interest rates USD Brazil given range dates. real interest rates consider IPCA inflation index.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetches Yield Curve Data from B3 ‚Äî yc_get","text":"","code":"if (FALSE) { df_yc <- yc_mget(first_date = Sys.Date() - 5, last_date = Sys.Date()) head(df_yc) } if (FALSE) { df_yc <- yc_get(Sys.Date()) head(df_yc) } if (FALSE) { df_yc_ipca <- yc_ipca_mget(   first_date = Sys.Date() - 5,   last_date = Sys.Date() ) head(df_yc_ipca) } if (FALSE) { df_yc_ipca <- yc_ipca_get(Sys.Date()) head(df_yc_ipca) } if (FALSE) { df_yc_usd <- yc_usd_mget(   first_date = Sys.Date() - 5,   last_date = Sys.Date() ) head(df_yc_usd) } if (FALSE) { df_yc_usd <- yc_usd_get(Sys.Date()) head(df_yc_usd) }"},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_superset.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates superset with yield curves and futures ‚Äî yc_superset","title":"Creates superset with yield curves and futures ‚Äî yc_superset","text":"Creates superset yield curves future contracts indicating terms match futures contracts maturities.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_superset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates superset with yield curves and futures ‚Äî yc_superset","text":"","code":"yc_superset(yc, fut)  yc_usd_superset(yc, fut)  yc_ipca_superset(yc, fut)"},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_superset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates superset with yield curves and futures ‚Äî yc_superset","text":"yc yield curve dataset fut futures dataset","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_superset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates superset with yield curves and futures ‚Äî yc_superset","text":"dataframe yield curve flagged futures maturities.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/reference/yc_superset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates superset with yield curves and futures ‚Äî yc_superset","text":"","code":"if (FALSE) { fut <- futures_get(Sys.Date() - 1)  yc <- yc_get(Sys.Date() - 1) yc_superset(yc, fut)  yc_usd <- yc_usd_get(Sys.Date() - 1) yc_usd_superset(yc_usd, fut)  yc_ipca <- yc_ipca_get(Sys.Date() - 1) yc_ipca_superset(yc_ipca, fut) }"},{"path":"http://wilsonfreitas.github.io/rb3/news/index.html","id":"rb3-005","dir":"Changelog","previous_headings":"","what":"rb3 0.0.5","title":"rb3 0.0.5","text":"Updated documentation cache creates folder template organize files inside cache folder. Pass do_cache = FALSE save RDS file, defaults TRUE. Corrected BUG COTAHIST_YEARLY, uses cache wrongly (Issue #44) Corrected BUG due change fixedincome - function rates renamed implied_rate","code":""},{"path":"http://wilsonfreitas.github.io/rb3/news/index.html","id":"rb3-004","dir":"Changelog","previous_headings":"","what":"rb3 0.0.4","title":"rb3 0.0.4","text":"CRAN release: 2022-06-22 added locale en templates: COTAHIST_* NegociosIntraday intraday listed market trades NegociosBalcao intraday OTC (Debentures) trades NegociosBTB intraday lending trades imports organized (using importFrom NAMESPACE) added option rb3.cachedir set default cache directory order use cached files accross multiple sessions","code":""},{"path":"http://wilsonfreitas.github.io/rb3/news/index.html","id":"rb3-003","dir":"Changelog","previous_headings":"","what":"rb3 0.0.3","title":"rb3 0.0.3","text":"CRAN release: 2022-05-29 fixed tests yc_get(). updated bizdays version 0.1.10 (use load_builtin_calendars - Issue #31). changes ropensci process: added tests improve test coverage, functions renamed, codemeta Contributing.md. GetStockIndex get composition B3 indexes. GetTheoricalPortfolio get composition weights B3 indexes. GetPortfolioDay get composition, weights segments B3 indexes. CenariosCurva scenarios term structures interest rates. CenariosPrecoReferencia reference prices scenarios. IndexReport indexes daily market data. PriceReport daily prices market data. GetListedSupplementCompany supplement data listed companies. GetDetailsCompany get companies details (name, codeCVM, ‚Ä¶). GetListedCashDividends get list cash dividends. yc_ipca_get yc_ipca_mget real interest rates yc_usd_get yc_usd_mget USD interest rates Brazil cotahist_get_symbols get stocks list symbols cotahist_etfs_get, cotahist_fiis_get, cotahist_fidcs_get, cotahist_fiagros_get function cotahist_funds_get replaced ones. index_comp_get returns index composition index_weights_get returns index weights index_by_segment_get returns indexes assets grouped segments indexes_get lists available indexes indexes_last_update returns date indexes updated indexreport_get indexreport_mget download index report data cotahist_equity_options_superset joins options data, equity data interest rates option - useful run option volatility models. yc_superset, yc_usd_superset, yc_ipca_superset mark futures maturities yield curve.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/news/index.html","id":"rb3-002","dir":"Changelog","previous_headings":"","what":"rb3 0.0.2","title":"rb3 0.0.2","text":"CRAN release: 2022-05-10 changes ropensci process, replaced sapply purrr::map_xxx. improved class Filename, added new methods. added argument destdir = NULL convert_to function. created functions yc_get / yc_mget futures_get / futures_mget (Issue #26). improved fields creation (Issue #27). added downloader/reader GetStockIndex, JSON file relations stocks indexes.","code":""},{"path":"http://wilsonfreitas.github.io/rb3/news/index.html","id":"rb3-001","dir":"Changelog","previous_headings":"","what":"rb3 0.0.1","title":"rb3 0.0.1","text":"CRAN release: 2022-05-05 first release","code":""}]
